ALTER view [dbo].[vwMaterialRequirementPicking]
as

select 

MR.MaterialRequirementID,
MR.StockCode,
MR.Description,
MR.Quantity,
isnull(MR.PickedQty,0) as 'PickedQty',
MR.NetLenght,
MR.NetWidth,
MR.UoM,
MR.AreaID,
MR.SupplierStockCode,
MR.Comments,
MR.MaterialRequirementType,
SI.Category,
SI.PartNo,
SI.StockItemID,
SI.StockCode AS 'STOCKITEMCODE',
SI.Description AS 'SIDESCRIPTION',
SI.AverageCost,
SI.StdCost,
WO.WorkOrderID,
WO.WorkOrderNo,
WO.Description as 'WODESCRIPTION',
WO.PlannedDeliverDate,
WO.PlannedStartDate,
SO.OrderNo,
SO.ProjectName,
CU.CompanyName,
WOA.WorkOrderAllocationID,
SOPI.SalesOrderPhaseID,
SOPI.SalesOrderPhaseItemID,
SOPI.SalesOrderID,
isnull(MR.Quantity,0)-isnull(PickedQty,0) AS 'OSQty'
from MaterialRequirement MR

inner join stockitem si on si.StockItemID=MR.StockItemID 
INNER JOIN WorkOrder WO ON WO.WorkOrderID=MR.ObjectID AND WO.Status not in (2,3)
LEFT join WorkOrderAllocation WOA on WOA.WorkOrderID=WO.WorkOrderID
LEFT JOIN SalesOrderPhaseItem SOPI ON SOPI.SalesOrderPhaseItemID=WOA.SalesOrderPhaseItemID --IT'S INNER JOIN HERE
LEFT JOIN SalesOrder SO ON SO.SalesOrderID=SOPI.SalesOrderID
LEFT JOIN Customer CU ON CU.CustomerID = SO.CustomerID

WHERE MR.MaterialRequirementType IN (2,1)

GO

create Proc [dbo].[spPhaseMatReqPickedSum]
(
@SalesOrderPhaseID Int,
@StockItemID Int
)
As
Select Sum(PickedQty) as TotalPicked 
from vwMaterialRequirementPicking vwMR 
Where vwMR.SalesOrderPhaseID = @SalesOrderPhaseID And StockItemID = @StockItemID



GO


create Proc [dbo].[spPhaseMatReqRequiredQtySum]
(
@SalesOrderPhaseID Int,
@StockItemID Int
)
As
Select Sum(Quantity) as RequiredQty 
from vwMaterialRequirementPicking vwMR 
Where vwMR.SalesOrderPhaseID = @SalesOrderPhaseID And StockItemID = @StockItemID
go

Create Proc [dbo].spPhasePOIAQtyOrderedSum
(
@SalesOrderPhaseID Int,
@StockItemID Int
)
As
Select Sum(Quantity) as OrderedQty 
from vwPurchaseOrderItemAllocationInfo vwPOIAI
Where vwPOIAI.CallOffID = @SalesOrderPhaseID And StockItemID = @StockItemID and (vwPOIAI.BalanceQty<>0)

go