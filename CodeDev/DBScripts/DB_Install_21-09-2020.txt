
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ApplicationActivity') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ApplicationActivity
GO
CREATE TABLE dbo.ApplicationActivity
(
ApplicationActivityID               INT IDENTITY(1,1) NOT NULL,
ActivityCode                        INT,
ActivityArea                        VARCHAR(50),
Notes                               NTEXT,
ApplicationModuleID                 INT,
IsSensitive                         BIT,
CONSTRAINT PK_ApplicationActivity PRIMARY KEY CLUSTERED ( ApplicationActivityID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO


----------------------------------------------------
-- dbo.ApplicationModule
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ApplicationModule') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ApplicationModule
GO
CREATE TABLE dbo.ApplicationModule
(
ApplicationModuleID                 INT NOT NULL,
Module                              VARCHAR(32),
CONSTRAINT PK_ApplicationModule PRIMARY KEY CLUSTERED ( ApplicationModuleID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.CurrentLock
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.CurrentLock') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.CurrentLock
GO
CREATE TABLE dbo.CurrentLock
(
CurrentLockID                       INT IDENTITY(1,1) NOT NULL,
ConcurrentUserID                    INT,
UserID                              INT,
TableID                             INT,
PrimaryKeyID                        INT NOT NULL,
DBTable                             VARCHAR(64) NOT NULL,
PrimaryKey                          VARCHAR(64),
Scope                               SMALLINT,
TimeLocked                          DATETIME,
DBConnID                            INT DEFAULT ((0)),
CONSTRAINT PK_CurrentLock PRIMARY KEY NONCLUSTERED ( DBTable,PrimaryKeyID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.CurrentUserLog
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.CurrentUserLog') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.CurrentUserLog
GO
CREATE TABLE dbo.CurrentUserLog
(
ConcurrentUserID                    INT IDENTITY(1001,1) NOT NULL,
UserID                              INT DEFAULT ((0)),
DateLoggedOn                        DATETIME,
DateLoggedOff                       DATETIME,
SQLSPID                             INT DEFAULT ((0)),
NTUserName                          VARCHAR(255),
HostPC                              VARCHAR(255),
PCLogonTime                         DATETIME,
AppName                             VARCHAR(32),
AppVersionNo                        VARCHAR(32),
SystemCleared                       BIT DEFAULT ((0)),
CONSTRAINT PK_CurrentUserLog PRIMARY KEY CLUSTERED ( ConcurrentUserID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.Customer
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.Customer') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.Customer
GO
CREATE TABLE dbo.Customer
(
CustomerID                          INT IDENTITY(1,1) NOT NULL,
CompanyName                         VARCHAR(64),
CustomerStatusID                    INT DEFAULT ((0)),
CustomerTypeID                      INT DEFAULT ((0)),
SalesAreaID                         INT DEFAULT ((0)),
AccountRef                          VARCHAR(24),
TelNo                               VARCHAR(32),
Fax                                 VARCHAR(32),
Email                               VARCHAR(64),
WebURL                              VARCHAR(64),
SalesCreditPosition                 TINYINT DEFAULT ((0)),
SalesCreditLimit                    DECIMAL(18, 4),
SalesOnStop                         BIT DEFAULT ((0)) NOT NULL,
DateLastSCreditReview               DATETIME,
DateSCreditReviewDue                DATETIME,
SalesCreditComment                  VARCHAR(500),
PaymentTermsType                    TINYINT DEFAULT ((0)),
PaymentTermsParam                   INT DEFAULT ((0)),
VATRegNo                            VARCHAR(24),
VATRateCode                         SMALLINT DEFAULT ((0)),
ParentCompanyID                     INT DEFAULT ((0)),
InvoiceParentCompany                BIT DEFAULT ((0)) NOT NULL,
DateEntered                         DATETIME DEFAULT (getdate()),
DefaultNominalCode                  VARCHAR(32),
MainAddress1                        VARCHAR(100),
MainAddress2                        VARCHAR(100),
MainTown                            VARCHAR(64),
MainCounty                          VARCHAR(64),
MainPostCode                        VARCHAR(10),
MainCountry                         VARCHAR(64),
CustomerNotes                       VARCHAR(2000),
SalesEmployeeID                     INT,
rucnumber                           VARCHAR(25),
RazonSocial                         VARCHAR(100),
BancoIntermediario                  VARCHAR(100),
Numero_SWIFT                        VARCHAR(15),
Numero_ABA                          VARCHAR(15),
CustomerReference                   VARCHAR(15),
SalesTermsType                      INT,
CONSTRAINT PK_Customer PRIMARY KEY CLUSTERED ( CustomerID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.CustomerContact
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.CustomerContact') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.CustomerContact
GO
CREATE TABLE dbo.CustomerContact
(
CustomerContactID                   INT IDENTITY(1,1) NOT NULL,
CustomerID                          INT,
Title                               VARCHAR(8),
FirstName                           VARCHAR(32),
LastName                            VARCHAR(32),
TelNo                               VARCHAR(32),
Email                               VARCHAR(64),
Mobile                              VARCHAR(32),
ContactType                         INT,
ContactOptions                      INT,
IsActive                            BIT DEFAULT ((0)) NOT NULL,
DateStart                           DATETIME DEFAULT (getdate()),
DateEnd                             DATETIME,
Position                            VARCHAR(32),
CONSTRAINT PK_Contact PRIMARY KEY CLUSTERED ( CustomerContactID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.CustomerPurchaseOrder
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.CustomerPurchaseOrder') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.CustomerPurchaseOrder
GO
CREATE TABLE dbo.CustomerPurchaseOrder
(
CustomerPurchaseOrderID             INT IDENTITY(1,1) NOT NULL,
SalesOrderID                        INT,
OrderNo                             VARCHAR(20),
OrderDate                           DATE,
OrderValue                          MONEY,
CONSTRAINT pk_CustomerPurchaseOrderID PRIMARY KEY CLUSTERED ( CustomerPurchaseOrderID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.EmailSettings
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.EmailSettings') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.EmailSettings
GO
CREATE TABLE dbo.EmailSettings
(
EmailSettingsID                     INT IDENTITY(1,1) NOT NULL,
Description                         VARCHAR(100),
DelMethod                           TINYINT,
Domain                              VARCHAR(50),
Password                            VARCHAR(50),
PickupDirectoryLocation             VARCHAR(100),
Port                                INT,
SMTP                                VARCHAR(100),
UseDefaultCredentials               BIT,
UserName                            VARCHAR(100),
EnableSSL                           BIT,
SecurityProtocol                    INT,
DefaultToSpooler                    BIT,
SendAllToTest                       BIT,
DefaultEmailFromAddress             VARCHAR(32),
AlwaysSendAsPlainText               BIT,
CONSTRAINT PK_EmailSettings PRIMARY KEY CLUSTERED ( EmailSettingsID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.EmailStore
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.EmailStore') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.EmailStore
GO
CREATE TABLE dbo.EmailStore
(
EmailStoreID                        INT IDENTITY(1,1) NOT NULL,
SubFolder                           VARCHAR(32),
Filename                            VARCHAR(400),
DateEmailSent                       DATETIME,
IsSentItem                          BIT,
EmailTo                             VARCHAR(2000),
EmailFrom                           VARCHAR(320),
Subject                             VARCHAR(1000),
Body                                VARCHAR(max),
FiledBy                             VARCHAR(64),
DateFiled                           DATETIME,
FilingTitle                         VARCHAR(1000),
Keywords                            VARCHAR(1000),
ActiveStatus                        TINYINT,
CONSTRAINT PK_EmailStore PRIMARY KEY CLUSTERED ( EmailStoreID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.EmailTemplate
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.EmailTemplate') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.EmailTemplate
GO
CREATE TABLE dbo.EmailTemplate
(
EmailTemplateID                     INT IDENTITY(1,1) NOT NULL,
EmailTemplateEnum                   TINYINT,
DistributionEnum                    TINYINT,
Subject                             VARCHAR(256),
Body                                VARCHAR(max),
CONSTRAINT PK_EmailTemplate PRIMARY KEY CLUSTERED ( EmailTemplateID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.Employee
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.Employee') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.Employee
GO
CREATE TABLE dbo.Employee
(
EmployeeID                          INT IDENTITY(1,1) NOT NULL,
HostCompanyID                       INT,
Title                               VARCHAR(12),
Salutation                          VARCHAR(12),
FirstName                           VARCHAR(32),
MiddleName                          VARCHAR(32),
LastName                            VARCHAR(32),
EmployeeRefNo                       VARCHAR(32),
EmployeeType                        INT,
InternalExtension                   VARCHAR(8),
TelNo                               VARCHAR(32),
Email                               VARCHAR(64),
Mobile                              VARCHAR(32),
Position                            VARCHAR(64),
Notes                               VARCHAR(max),
IsActive                            BIT DEFAULT ((0)) NOT NULL,
DateStart                           DATETIME DEFAULT (getdate()),
DateEnd                             DATETIME,
MainRoleID                          INT,
AllRolesBIN                         BIGINT,
CONSTRAINT PK_Employee PRIMARY KEY CLUSTERED ( EmployeeID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.EmployeeRateOfPay
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.EmployeeRateOfPay') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.EmployeeRateOfPay
GO
CREATE TABLE dbo.EmployeeRateOfPay
(
EmployeeRateOfPayID                 INT IDENTITY(1,1) NOT NULL,
EmployeeID                          INT,
PayType                             TINYINT,
StartDate                           SMALLDATETIME,
StandardRate                        DECIMAL(9, 2),
CONSTRAINT pk_EmployeeRateOfPay PRIMARY KEY CLUSTERED ( EmployeeRateOfPayID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.ExchangeRate
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ExchangeRate') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ExchangeRate
GO
CREATE TABLE dbo.ExchangeRate
(
ExchangeRateID                      INT IDENTITY(1,1) NOT NULL,
ExchangeRateDate                    DATETIME,
ExchangeRateValue                   MONEY,
Currency                            TINYINT,
CONSTRAINT PK_ExchangeRate PRIMARY KEY CLUSTERED ( ExchangeRateID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.FileTracker
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.FileTracker') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.FileTracker
GO
CREATE TABLE dbo.FileTracker
(
FileID                              INT IDENTITY(1,1) NOT NULL,
FileName                            VARCHAR(300),
FileType                            VARCHAR(10),
DateReceived                        DATETIME,
ParentID                            INT,
ParentType                          INT,
Description                         VARCHAR(255),
IncludeInPack                       BIT,
CONSTRAINT PK_File PRIMARY KEY CLUSTERED ( FileID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.FurnitureCategory
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.FurnitureCategory') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.FurnitureCategory
GO
CREATE TABLE dbo.FurnitureCategory
(
FurnitureCategoryID                 INT IDENTITY(1,1) NOT NULL,
EnglishDescription                  VARCHAR(50),
SpanishDescription                  VARCHAR(50),
CONSTRAINT PK_FurnitureCategory PRIMARY KEY CLUSTERED ( FurnitureCategoryID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.Grouping
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.Grouping') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.Grouping
GO
CREATE TABLE dbo.Grouping
(
GroupingID                          INT IDENTITY(1,1) NOT NULL,
GroupingName                        VARCHAR(50),
ApplicationID                       INT,
CONSTRAINT PK_Grouping PRIMARY KEY CLUSTERED ( GroupingID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.GroupingApplicationActivity
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.GroupingApplicationActivity') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.GroupingApplicationActivity
GO
CREATE TABLE dbo.GroupingApplicationActivity
(
GroupingApplicationActivityID       INT IDENTITY(1,1) NOT NULL,
GroupingID                          INT,
ApplicationActivityID               INT,
PermissionID                        INT,
CONSTRAINT PK_GroupingApplicationActivity PRIMARY KEY CLUSTERED ( GroupingApplicationActivityID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.HostCompany
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.HostCompany') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.HostCompany
GO
CREATE TABLE dbo.HostCompany
(
HostCompanyID                       INT IDENTITY(1,1) NOT NULL,
CompanyName                         VARCHAR(100),
CompanyNumber                       VARCHAR(16),
VATRegNo                            VARCHAR(16),
TelNo                               VARCHAR(100),
Fax                                 VARCHAR(100),
Email                               VARCHAR(200),
WebURL                              VARCHAR(200),
Address1                            VARCHAR(100),
Address2                            VARCHAR(100),
Address3                            VARCHAR(100),
Town                                VARCHAR(100),
County                              VARCHAR(100),
PostCode                            VARCHAR(10),
Country                             VARCHAR(100),
Notes                               VARCHAR(max),
Abreviation                         VARCHAR(12),
CONSTRAINT PK_HostCompany PRIMARY KEY CLUSTERED ( HostCompanyID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.HouseType
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.HouseType') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.HouseType
GO
CREATE TABLE dbo.HouseType
(
HouseTypeID                         INT IDENTITY(1,1) NOT NULL,
Name                                VARCHAR(256),
CONSTRAINT pk_HouseType PRIMARY KEY CLUSTERED ( HouseTypeID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.HouseTypeSalesItems
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.HouseTypeSalesItems') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.HouseTypeSalesItems
GO
CREATE TABLE dbo.HouseTypeSalesItems
(
HouseTypeSalesItemsID               INT IDENTITY(1,1) NOT NULL,
HouseTypeID                         INT,
ItemNumber                          VARCHAR(15),
Description                         TEXT,
Quantity                            INT,
UnitPrice                           DECIMAL(9, 2),
ImageFile                           VARCHAR(255),
WoodSpecieID                        INT,
WoodFinish                          INT,
QtyInvoiced                         INT,
CONSTRAINT pk_HouseTypeSalesItems PRIMARY KEY CLUSTERED ( HouseTypeSalesItemsID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.Invoice
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.Invoice') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.Invoice
GO
CREATE TABLE dbo.Invoice
(
InvoiceID                           INT IDENTITY(1,1) NOT NULL,
SalesOrderID                        INT,
InvoiceDate                         DATE,
CreatedDate                         DATE,
NetValue                            MONEY,
TaxValue                            MONEY,
InvoiceStatus                       SMALLINT,
CustomerPurchaseOrder               NCHAR(20),
InvoiceNo                           VARCHAR(15),
CONSTRAINT PK_Invoice PRIMARY KEY CLUSTERED ( InvoiceID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.InvoiceItem
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.InvoiceItem') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.InvoiceItem
GO
CREATE TABLE dbo.InvoiceItem
(
InvoiceItemID                       INT IDENTITY(1,1) NOT NULL,
InvoiceID                           INT,
SalesItemID                         INT,
Description                         VARCHAR(255),
Quantity                            DECIMAL(18, 0),
UnitPrice                           DECIMAL(18, 0),
CONSTRAINT PK_InvoiceItem PRIMARY KEY CLUSTERED ( InvoiceItemID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.LabelDefinition
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.LabelDefinition') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.LabelDefinition
GO
CREATE TABLE dbo.LabelDefinition
(
LabelDefinitionID                   INT IDENTITY(1,1) NOT NULL,
LabelDefName                        VARCHAR(50),
TopMargin                           DECIMAL(10, 2),
LeftMargin                          DECIMAL(10, 2),
LabelHeight                         DECIMAL(10, 2),
LabelWidth                          DECIMAL(10, 2),
PrintHeight                         DECIMAL(10, 2),
PrintWidth                          DECIMAL(10, 2),
NoOfColumns                         DECIMAL(10, 2),
NoOfRows                            DECIMAL(10, 2),
ReportLabelType                     INT,
PageHeight                          DECIMAL(10, 2),
PageWidth                           DECIMAL(10, 2),
PrinterName                         VARCHAR(50),
CONSTRAINT PK_LabelDefinition PRIMARY KEY NONCLUSTERED ( LabelDefinitionID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.LookUpField
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.LookUpField') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.LookUpField
GO
CREATE TABLE dbo.LookUpField
(
LookupFieldID                       INT IDENTITY(1,1) NOT NULL,
LookUpTableID                       INT,
DisplayOrder                        INT,
FieldName                           VARCHAR(30),
DisplayName                         VARCHAR(30),
PermissionID                        INT,
ActivityCode                        INT,
TranslationTableName                VARCHAR(128),
TranslationKeyFieldName             VARCHAR(50),
TranslationFieldName                VARCHAR(30),
TranslationNullDisplay              VARCHAR(50),
SetValue                            VARCHAR(50),
TallyID                             INT DEFAULT ((0)),
CONSTRAINT PK_LookUpField PRIMARY KEY CLUSTERED ( LookupFieldID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.LookUpLink
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.LookUpLink') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.LookUpLink
GO
CREATE TABLE dbo.LookUpLink
(
LookupLinkID                        INT IDENTITY(1,1) NOT NULL,
LookUpTableID                       INT,
DisplayOrder                        INT,
Name                                VARCHAR(30),
GroupLookUpTableID                  INT,
GroupKeyFieldName                   VARCHAR(50),
TriggerActivityCode                 INT,
ActivityCode                        INT,
CONSTRAINT PK_LookUpLink PRIMARY KEY CLUSTERED ( LookupLinkID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.LookUpSelection
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.LookUpSelection') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.LookUpSelection
GO
CREATE TABLE dbo.LookUpSelection
(
LookUpSelectionCode                 INT NOT NULL,
DisplayOrder                        INT,
MenuDescription                     VARCHAR(50),
MenuVisible                         BIT DEFAULT ((0)),
MenuExpanded                        BIT DEFAULT ((0)),
CONSTRAINT PK_LookUpSelection PRIMARY KEY CLUSTERED ( LookUpSelectionCode )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.LookUpTable
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.LookUpTable') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.LookUpTable
GO
CREATE TABLE dbo.LookUpTable
(
LookUpTableID                       INT IDENTITY(1,1) NOT NULL,
DisplayOrder                        INT,
LookUpTableDescription              VARCHAR(50),
TableName                           VARCHAR(255),
KeyIDFieldName                      VARCHAR(30),
DisplayFieldName                    VARCHAR(30),
ProtectedFieldName                  VARCHAR(30),
PermissionID                        INT,
ActivityCode                        INT,
OrderModeENUM                       INT,
GroupKeyFieldName                   VARCHAR(50),
GroupKeyValue                       INT,
SelectionCode                       INT,
EnableValidation                    BIT DEFAULT ((0)),
ArchiveFieldName                    VARCHAR(50),
ValidationCode                      INT,
LayoutFileName                      VARCHAR(100),
CONSTRAINT PK_LookUpTable PRIMARY KEY CLUSTERED ( LookUpTableID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.MaterialRequirement
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.MaterialRequirement') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.MaterialRequirement
GO
CREATE TABLE dbo.MaterialRequirement
(
MaterialRequirementID               INT IDENTITY(1,1) NOT NULL,
ObjectType                          TINYINT,
ObjectID                            INT,
StockCode                           VARCHAR(25),
Description                         TEXT,
Quantity                            DECIMAL(9, 3),
MaterialRequirementType             TINYINT,
UnitPiece                           INT,
NetThickness                        DECIMAL(9, 2),
NetWidth                            DECIMAL(9, 2),
NetLenght                           DECIMAL(9, 2),
QualityType                         INT,
MaterialTypeID                      INT,
WoodSpecie                          INT,
WoodFinish                          INT,
UoM                                 TEXT,
AreaID                              INT,
SupplierStockCode                   VARCHAR(15),
Comments                            VARCHAR(255),
PiecesPerComponent                  DECIMAL(9, 3),
TotalPieces                         DECIMAL(18, 0),
DateChange                          DATETIME,
DateOtherMaterial                   DATETIME,
StockItemID                         INT,
PickedQty                           DECIMAL(18, 0),
CONSTRAINT pk_MaterialRequirement PRIMARY KEY CLUSTERED ( MaterialRequirementID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.MaterialRequirementForcasting
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.MaterialRequirementForcasting') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.MaterialRequirementForcasting
GO
CREATE TABLE dbo.MaterialRequirementForcasting
(
MaterialRequirementForcastingID     INT IDENTITY(1,1) NOT NULL,
ObjectType                          TINYINT,
ObjectID                            INT,
StockCode                           VARCHAR(25),
Description                         TEXT,
Quantity                            DECIMAL(9, 3),
MaterialRequirementType             TINYINT,
UnitPiece                           INT,
NetThickness                        DECIMAL(9, 2),
NetWidth                            DECIMAL(9, 2),
NetLenght                           DECIMAL(9, 2),
QualityType                         INT,
MaterialTypeID                      INT,
WoodSpecie                          INT,
WoodFinish                          INT,
UoM                                 TEXT,
AreaID                              INT,
SupplierStockCode                   VARCHAR(15),
Comments                            VARCHAR(255),
PiecesPerComponent                  DECIMAL(9, 3),
TotalPieces                         DECIMAL(18, 0),
DateChange                          DATETIME,
DateOtherMaterial                   DATETIME,
StockItemID                         INT,
CONSTRAINT pk_MaterialRequirementForcastingID PRIMARY KEY CLUSTERED ( MaterialRequirementForcastingID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.OrderMode
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.OrderMode') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.OrderMode
GO
CREATE TABLE dbo.OrderMode
(
OrderModeENUM                       INT NOT NULL,
OrderMode                           VARCHAR(16),
DisplayOrder                        INT,
CONSTRAINT PK_OrderMode PRIMARY KEY CLUSTERED ( OrderModeENUM )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.OutputDocument
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.OutputDocument') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.OutputDocument
GO
CREATE TABLE dbo.OutputDocument
(
OutputDocumentID                    INT IDENTITY(1,1) NOT NULL,
ParentID                            INT,
ParentTypeID                        TINYINT,
DocumentTypeID                      TINYINT,
FileTypeID                          TINYINT,
FilePath                            VARCHAR(512),
VersionRef                          VARCHAR(128),
DateCreated                         DATETIME,
CONSTRAINT PK_OutputDocument PRIMARY KEY CLUSTERED ( OutputDocumentID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.Permission
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.Permission') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.Permission
GO
CREATE TABLE dbo.Permission
(
PermissionID                        INT NOT NULL,
Permission                          VARCHAR(16),
CONSTRAINT PK_Permission PRIMARY KEY CLUSTERED ( PermissionID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.PhaseItemComponent
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.PhaseItemComponent') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.PhaseItemComponent
GO
CREATE TABLE dbo.PhaseItemComponent
(
PhaseItemComponentID                INT IDENTITY(1,1) NOT NULL,
SalesOrderPhaseID                   INT,
Quantity                            INT,
CONSTRAINT PK_PhaseItemComponent PRIMARY KEY CLUSTERED ( PhaseItemComponentID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.PODelivery
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.PODelivery') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.PODelivery
GO
CREATE TABLE dbo.PODelivery
(
PODeliveryID                        INT IDENTITY(1,1) NOT NULL,
POCallOffID                         INT,
GRNumber                            VARCHAR(32),
ReceivedDate                        DATETIME,
Comment                             VARCHAR(512),
IsSupplierReturn                    BIT,
DateCreated                         DATETIME,
Status                              TINYINT,
ReturnReasonID                      TINYINT,
ActionRequiredID                    TINYINT,
FileExport                          VARCHAR(256),
FullyInvoiced                       BIT,
PurchaseOrderID                     INT,
SupplierDelNo                       VARCHAR(50),
PODeliveryValue                     DECIMAL(9, 4),
CONSTRAINT pkPODeliveryID PRIMARY KEY CLUSTERED ( PODeliveryID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.PODeliveryItem
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.PODeliveryItem') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.PODeliveryItem
GO
CREATE TABLE dbo.PODeliveryItem
(
PODeliveryItemID                    INT IDENTITY(1,1) NOT NULL,
PODeliveryID                        INT,
POCallOffItemID                     INT,
QtyReceived                         DECIMAL(10, 4),
POItemAllocationID                  INT,
QtyInvoiced                         DECIMAL(10, 4),
QtyRejected                         DECIMAL(10, 4),
CONSTRAINT pkPODeliveryItemID PRIMARY KEY CLUSTERED ( PODeliveryItemID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.ProductFurniture
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ProductFurniture') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ProductFurniture
GO
CREATE TABLE dbo.ProductFurniture
(
ProductFurnitureID                  INT IDENTITY(1,1) NOT NULL,
Description                         NCHAR(100),
FurnitureType                       INT,
Notes                               TEXT,
CONSTRAINT PK_ProductFurniture PRIMARY KEY CLUSTERED ( ProductFurnitureID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.ProductFurnitureComponent
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ProductFurnitureComponent') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ProductFurnitureComponent
GO
CREATE TABLE dbo.ProductFurnitureComponent
(
ProductFurnitureComponentID         INT IDENTITY(1,1) NOT NULL,
ProductFurnitureID                  INT,
Description                         NCHAR(100),
Species                             INT,
Qty                                 FLOAT,
Dimensions                          NCHAR(100)
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.ProductFurnitureOperation
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ProductFurnitureOperation') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ProductFurnitureOperation
GO
CREATE TABLE dbo.ProductFurnitureOperation
(
ProductFurnitureOperationID         INT NOT NULL,
ProductfurnitureID                  INT,
WorkCenterID                        INT,
Description                         NCHAR(100),
EstimatedHours                      FLOAT,
QtyOfOperators                      INT,
CONSTRAINT PK_ProductFurnitureOperation PRIMARY KEY CLUSTERED ( ProductFurnitureOperationID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.ProductInstallation
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ProductInstallation') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ProductInstallation
GO
CREATE TABLE dbo.ProductInstallation
(
ProductInstallationID               INT IDENTITY(1,1) NOT NULL,
Description                         NCHAR(100),
ProductInstallationTypeID           INT,
Notes                               TEXT,
CONSTRAINT PK_ProductInstallation PRIMARY KEY CLUSTERED ( ProductInstallationID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.ProductInstallationType
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ProductInstallationType') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ProductInstallationType
GO
CREATE TABLE dbo.ProductInstallationType
(
ProductInstallationTypeID           INT IDENTITY(1,1) NOT NULL,
Description                         NCHAR(100),
CONSTRAINT PK_ProductInstallationTypeID PRIMARY KEY CLUSTERED ( ProductInstallationTypeID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.ProductStructure
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ProductStructure') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ProductStructure
GO
CREATE TABLE dbo.ProductStructure
(
ProductStructureID                  INT IDENTITY(1,1) NOT NULL,
Description                         NCHAR(100),
ProductStructureTypeID              INT,
Notes                               TEXT,
CONSTRAINT PK_ProductStructure PRIMARY KEY CLUSTERED ( ProductStructureID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.ProductStructureType
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ProductStructureType') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ProductStructureType
GO
CREATE TABLE dbo.ProductStructureType
(
ProductStructureTypeID              INT IDENTITY(1,1) NOT NULL,
Description                         NCHAR(100),
CONSTRAINT PK_ProductStructureType PRIMARY KEY CLUSTERED ( ProductStructureTypeID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.PurchaseOrder
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.PurchaseOrder') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.PurchaseOrder
GO
CREATE TABLE dbo.PurchaseOrder
(
PurchaseOrderID                     INT IDENTITY(1,1) NOT NULL,
PONum                               VARCHAR(50),
SupplierID                          INT DEFAULT ((0)),
SupplierContactName                 VARCHAR(50),
SupplierContactTel                  VARCHAR(50),
Category                            TINYINT,
SubmissionDate                      DATETIME,
Status                              TINYINT,
DelStatus                           TINYINT,
Instructions                        TEXT,
Comments                            TEXT,
BuyerID                             TINYINT,
AcknowledgementNo                   VARCHAR(50),
OrderType                           TINYINT,
Carriage                            FLOAT DEFAULT ((0)),
VatRate                             MONEY DEFAULT ((0)),
RequiredDate                        DATETIME,
PurchaseCategory                    TINYINT,
CoCOrder                            BIT,
CoCType                             TINYINT,
PriceGross                          MONEY DEFAULT ((0)),
TotalPrice                          MONEY DEFAULT ((0)),
DeliveryAddress1                    VARCHAR(128),
DeliveryAddress2                    VARCHAR(128),
DeliveryAddress3                    VARCHAR(128),
DeliveryTown                        VARCHAR(64),
DeliveryCounty                      VARCHAR(64),
DeliveryPostCode                    VARCHAR(16),
DeliveryContact                     VARCHAR(128),
DeliveryTel                         VARCHAR(64),
DeliveryEmail                       VARCHAR(64),
CallOffType                         TINYINT,
VatRateCode                         TINYINT,
ApplyVATToCarriage                  BIT,
SupplierContactID                   INT,
SupplierRef                         VARCHAR(64),
LastStatusChangeDate                DATETIME,
FileName                            VARCHAR(1000),
SupplierAddress1                    VARCHAR(128),
SupplierAddress2                    VARCHAR(128),
SupplierAddress3                    VARCHAR(128),
SupplierTown                        VARCHAR(64),
SupplierCounty                      VARCHAR(64),
SupplierPostCode                    VARCHAR(16),
InvoiceAddress1                     VARCHAR(128),
InvoiceAddress2                     VARCHAR(128),
InvoiceAddress3                     VARCHAR(128),
InvoiceTown                         VARCHAR(64),
InvoiceCounty                       VARCHAR(64),
InvoicePostCode                     VARCHAR(16),
ExchangeRateValue                   DECIMAL(9, 4),
PaymentStatus                       INT,
TotalNetValue                       DECIMAL(10, 4),
MaterialRequirementTypeID           INT,
DefaultCurrency                     INT,
CONSTRAINT pkPurchaseOrderID_PK PRIMARY KEY NONCLUSTERED ( PurchaseOrderID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.PurchaseOrderAllocation
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.PurchaseOrderAllocation') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.PurchaseOrderAllocation
GO
CREATE TABLE dbo.PurchaseOrderAllocation
(
PurchaseOrderAllocationID           INT IDENTITY(1,1) NOT NULL,
PurchaseOrderID                     INT,
CallOffID                           INT,
WorkOrderID                         INT,
CONSTRAINT pkPurchaseOrderAllocationID_PK PRIMARY KEY NONCLUSTERED ( PurchaseOrderAllocationID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.PurchaseOrderItem
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.PurchaseOrderItem') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.PurchaseOrderItem
GO
CREATE TABLE dbo.PurchaseOrderItem
(
PurchaseOrderItemID                 INT IDENTITY(1,1) NOT NULL,
PurchaseOrderID                     INT,
StockItemID                         INT,
Status                              TINYINT,
Description                         VARCHAR(512),
PartNo                              VARCHAR(64),
UnitPrice                           MONEY,
PricingMethod                       TINYINT,
PricingUnit                         TINYINT,
Length                              DECIMAL(9, 4),
Width                               DECIMAL(9, 4),
Thickness                           DECIMAL(9, 4),
LineNumber                          INT,
StockItemPartID                     INT,
CoCType                             TINYINT,
QtyRequired                         DECIMAL(10, 4),
SupplierCode                        VARCHAR(10),
NominalAccountCode                  VARCHAR(8),
NominalCostCentre                   VARCHAR(3),
VatRateCode                         TINYINT,
VatValue                            MONEY,
Notes                               VARCHAR(256),
AverageInvoicePrice                 MONEY,
Density                             DECIMAL(9, 4),
PickedQty                           DECIMAL(18, 0),
StockCode                           VARCHAR(20),
CONSTRAINT pkPurchaseOrderItemID PRIMARY KEY CLUSTERED ( PurchaseOrderItemID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.PurchaseOrderItemAllocation
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.PurchaseOrderItemAllocation') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.PurchaseOrderItemAllocation
GO
CREATE TABLE dbo.PurchaseOrderItemAllocation
(
PurchaseOrderItemAllocationID       INT IDENTITY(1,1) NOT NULL,
PurchaseOrderItemID                 INT,
CallOffID                           INT,
Quantity                            DECIMAL(9, 2),
ReceivedQty                         DECIMAL(18, 0),
WorkOrderID                         INT,
CONSTRAINT pkPurchaseOrderItemAllocationID PRIMARY KEY CLUSTERED ( PurchaseOrderItemAllocationID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.Role
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.Role') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.Role
GO
CREATE TABLE dbo.Role
(
RoleID                              INT IDENTITY(1,1) NOT NULL,
Role                                VARCHAR(50),
StartDate                           DATETIME DEFAULT (getdate()),
EndDate                             DATETIME,
CONSTRAINT PK_Role PRIMARY KEY CLUSTERED ( RoleID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.RTISGlobal
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.RTISGlobal') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.RTISGlobal
GO
CREATE TABLE dbo.RTISGlobal
(
RTISGlobalID                        INT IDENTITY(1,1) NOT NULL,
AuxFilePath                         VARCHAR(1000),
SharedUserFilePath                  VARCHAR(1000),
DefaultExportPath                   VARCHAR(1000),
LastUpdated                         DATETIME,
ErrorLogPath                        VARCHAR(1000),
EmailSettingsID                     INT,
DefaultEmailFrom                    VARCHAR(200),
DataSet                             VARCHAR(32),
VersionLogFile                      VARCHAR(500),
PodioPath                           VARCHAR(1000),
CONSTRAINT PK_RTISGlobal PRIMARY KEY CLUSTERED ( RTISGlobalID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.SalesItemAssembly
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.SalesItemAssembly') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.SalesItemAssembly
GO
CREATE TABLE dbo.SalesItemAssembly
(
SalesItemAssemblyID                 INT IDENTITY(1,1) NOT NULL,
SalesOrderID                        INT,
SalesOrderItemID                    INT,
Ref                                 VARCHAR(25),
Description                         VARCHAR(100),
HouseTypeID                         INT,
Quantity                            INT,
PricePerUnit                        DECIMAL(9, 3),
TotalPrice                          DECIMAL(9, 3),
CONSTRAINT PK_SalesItemAssembly PRIMARY KEY CLUSTERED ( SalesItemAssemblyID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.SalesOrder
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.SalesOrder') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.SalesOrder
GO
CREATE TABLE dbo.SalesOrder
(
SalesOrderID                        INT IDENTITY(1,1) NOT NULL,
CustomerID                          INT DEFAULT ((0)),
CustomerContactID                   INT,
ProjectName                         VARCHAR(200),
EstimatorEmployeeID                 INT DEFAULT ((0)),
OrderTypeID                         INT DEFAULT ((0)),
OrderStatusENUM                     INT DEFAULT ((0)),
OrderNo                             VARCHAR(16),
DateEntered                         DATETIME DEFAULT (getdate()),
InternalComments                    VARCHAR(2000),
VisibleNotes                        VARCHAR(2000),
CustomerRef                         VARCHAR(50),
ContractManagerID                   INT,
SalesAreaID                         INT,
DelAddress1                         VARCHAR(100),
DelAddress2                         VARCHAR(100),
HostCompanyID                       INT,
BusinessSectorID                    INT,
ClientInfo                          VARCHAR(64),
FinishDate                          DATETIME,
DueTime                             DATETIME,
SalesDelAreaID                      INT,
CustomerDelContacID                 INT,
ShippingCost                        DECIMAL(8, 2),
WorkOrdersIssued                    BIT,
PodioPath                           VARCHAR(256),
Version                             VARCHAR(10),
OrderPhaseType                      TINYINT,
CONSTRAINT PK_SalesOrder PRIMARY KEY CLUSTERED ( SalesOrderID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.SalesOrderItem
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.SalesOrderItem') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.SalesOrderItem
GO
CREATE TABLE dbo.SalesOrderItem
(
SalesOrderItemID                    INT IDENTITY(1,1) NOT NULL,
SalesOrderID                        INT,
ItemNumber                          VARCHAR(15),
Description                         TEXT,
Quantity                            INT,
UnitPrice                           DECIMAL(9, 2),
ImageFile                           VARCHAR(255),
WoodSpecieID                        INT,
WoodFinish                          INT,
QtyInvoiced                         INT,
SalesItemAssemblyID                 INT,
HouseTypeID                         INT,
CONSTRAINT pkSalesOrderItem PRIMARY KEY CLUSTERED ( SalesOrderItemID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.SalesOrderPhase
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.SalesOrderPhase') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.SalesOrderPhase
GO
CREATE TABLE dbo.SalesOrderPhase
(
SalesOrderPhaseID                   INT IDENTITY(1,1) NOT NULL,
SalesOrderID                        INT,
SalesOrderNo                        VARCHAR(100),
DateCreated                         DATETIME,
CreatedBy                           INT,
DateRequired                        DATETIME,
QuantityItems                       INT,
TotalPrice                          DECIMAL(10, 4),
PhaseNumber                         INT,
ScheduleFile                        VARCHAR(255),
PhaseRef                            VARCHAR(50),
DespatchStatus                      TINYINT,
SpecificationStatus                 TINYINT DEFAULT ((0)),
InvoiceStatus                       TINYINT DEFAULT ((0)),
ProductionStatus                    TINYINT DEFAULT ((0)),
MatReqStatus                        TINYINT DEFAULT ((0)),
CommittedBy                         INT,
DateCommitted                       DATETIME,
JobNo                               VARCHAR(10),
CONSTRAINT PK_SalesOrderPhase PRIMARY KEY CLUSTERED ( SalesOrderPhaseID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.SalesOrderPhaseItem
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.SalesOrderPhaseItem') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.SalesOrderPhaseItem
GO
CREATE TABLE dbo.SalesOrderPhaseItem
(
SalesOrderPhaseItemID               INT IDENTITY(1,1) NOT NULL,
SalesOrderID                        INT,
SalesOrderPhaseID                   INT,
SalesItemID                         INT,
Qty                                 INT,
CONSTRAINT PK_SalesOrderPhaseItem PRIMARY KEY NONCLUSTERED ( SalesOrderPhaseItemID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.SalesOrderStage
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.SalesOrderStage') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.SalesOrderStage
GO
CREATE TABLE dbo.SalesOrderStage
(
SalesOrderStageID                   INT IDENTITY(1,1) NOT NULL,
SalesOrderID                        INT,
TotalCost                           DECIMAL(9, 3),
StageTypeID                         INT,
Description                         VARCHAR(100),
CONSTRAINT PK_SalesOrderStage PRIMARY KEY CLUSTERED ( SalesOrderStageID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.Shift
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.Shift') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.Shift
GO
CREATE TABLE dbo.Shift
(
ShiftID                             INT IDENTITY(1,1) NOT NULL,
Description                         TEXT,
CONSTRAINT pk_ShiftID PRIMARY KEY CLUSTERED ( ShiftID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.ShiftDetails
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ShiftDetails') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ShiftDetails
GO
CREATE TABLE dbo.ShiftDetails
(
ShiftDetailID                       INT IDENTITY(1,1) NOT NULL,
ShiftID                             INT,
DayOfWeek                           TINYINT,
StartTime                           DATETIME,
EndTime                             DATETIME,
CONSTRAINT pk_ShiftDetailID PRIMARY KEY CLUSTERED ( ShiftDetailID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.StageType
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.StageType') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.StageType
GO
CREATE TABLE dbo.StageType
(
StageTypeID                         INT IDENTITY(1,1) NOT NULL,
Description                         VARCHAR(100),
CONSTRAINT PK_StageType PRIMARY KEY CLUSTERED ( StageTypeID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.StockItem
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.StockItem') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.StockItem
GO
CREATE TABLE dbo.StockItem
(
StockItemID                         INT IDENTITY(1,1) NOT NULL,
StockCode                           VARCHAR(25),
Category                            TINYINT,
ItemType                            TINYINT,
Species                             INT,
Colour                              VARCHAR(25),
PartNo                              VARCHAR(25),
Length                              DECIMAL(10, 4),
Width                               DECIMAL(10, 4),
Thickness                           DECIMAL(10, 4),
Description                         VARCHAR(255),
StockQuantity                       DECIMAL(10, 4),
DefaultSupplier                     INT,
Finish                              TINYINT,
ShortDescription                    VARCHAR(100),
SubItemType                         INT,
StockFinanceCategoryID              INT DEFAULT ((0)),
ExtraInfo                           VARCHAR(1000),
Handing                             TINYINT,
OppositeStockItemID                 INT,
IsGeneric                           BIT,
TemplateStockItemID                 INT,
Inactive                            BIT,
InterdenStockItemID                 INT,
ProjectID                           INT,
ASIS_CDUNI                          INT,
ASIS_CDPROV                         INT,
ASIS_FOB                            DECIMAL(9, 2),
ASIS_UCO_C                          DECIMAL(9, 2),
ASIS_UCO_D                          DECIMAL(9, 2),
ASIS_UCTCL                          DECIMAL(9, 2),
ASISID                              INT,
StdCost                             DECIMAL(9, 2),
StdImportCost                       DECIMAL(9, 2),
ImageFile                           VARCHAR(255),
CostQty                             DECIMAL(9, 2),
LasUsedDate                         DATETIME,
LastUsedDate                        DATETIME,
AuxCode                             VARCHAR(15),
UoM                                 INT,
CONSTRAINT pk_StockItem PRIMARY KEY CLUSTERED ( StockItemID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.StockItemLocation
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.StockItemLocation') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.StockItemLocation
GO
CREATE TABLE dbo.StockItemLocation
(
StockItemLocationID                 INT IDENTITY(1,1) NOT NULL,
StockItemID                         INT,
LocationID                          TINYINT,
Qty                                 DECIMAL(10, 4),
BatchID                             INT,
CONSTRAINT pk_StockItemLocation PRIMARY KEY CLUSTERED ( StockItemLocationID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.StockItemLocationAmendmentLog
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.StockItemLocationAmendmentLog') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.StockItemLocationAmendmentLog
GO
CREATE TABLE dbo.StockItemLocationAmendmentLog
(
StockItemLocationAmendmentLogID     INT IDENTITY(1,1) NOT NULL,
SystemDate                          DATETIME,
AmendmentDate                       DATETIME,
StockItemLocationID                 INT,
ChangeDetails                       VARCHAR(2000),
UserID                              INT,
UserNotes                           VARCHAR(2000),
CONSTRAINT PK_StockItemLocationAmendmentLog PRIMARY KEY CLUSTERED ( StockItemLocationAmendmentLogID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.StockItemTransactionLog
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.StockItemTransactionLog') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.StockItemTransactionLog
GO
CREATE TABLE dbo.StockItemTransactionLog
(
StockItemTransactionLogID           INT IDENTITY(1,1) NOT NULL,
ObjectType                          TINYINT,
ObjectID                            INT,
TransactionType                     TINYINT,
UserID                              INT,
TranValue                           DECIMAL(12, 4),
PrevValue                           DECIMAL(12, 4),
NewValue                            DECIMAL(12, 4),
SystemDate                          DATETIME,
TransactionDate                     DATETIME,
RefObjectType                       TINYINT,
RefObjectID                         INT,
AdditionalRef                       INT,
Note                                VARCHAR(300),
TransactionValuation                DECIMAL(10, 4),
StockValuation                      DECIMAL(10, 4),
ReferenceNo                         VARCHAR(5),
TransactionValuationDollar          MONEY,
CONSTRAINT pk_StockItemTransactionLog PRIMARY KEY CLUSTERED ( StockItemTransactionLogID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.StockItemType
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.StockItemType') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.StockItemType
GO
CREATE TABLE dbo.StockItemType
(
StockItemTypeID                     INT IDENTITY(1,1) NOT NULL,
DisplayOrder                        INT,
Abbreviation                        VARCHAR(10),
Description                         VARCHAR(500),
Value                               INT,
ArchiveOnly                         BIT,
Category                            INT DEFAULT ((0)) NOT NULL,
CONSTRAINT PK_ItemType PRIMARY KEY CLUSTERED ( StockItemTypeID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.StockTake
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.StockTake') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.StockTake
GO
CREATE TABLE dbo.StockTake
(
StockTakeID                         INT IDENTITY(1,1) NOT NULL,
StockTakeTypeID                     TINYINT,
Description                         VARCHAR(100),
StockTakeDate                       DATETIME,
CreatedDate                         DATETIME,
SnapshotDateTime                    DATETIME,
DateCommitted                       DATETIME,
RangeStockCodeStart                 VARCHAR(32),
RangeStockCodeEnd                   VARCHAR(32),
DateSystemQty                       DATETIME,
CONSTRAINT PK_StockTake PRIMARY KEY CLUSTERED ( StockTakeID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.StockTakeItem
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.StockTakeItem') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.StockTakeItem
GO
CREATE TABLE dbo.StockTakeItem
(
StockTakeItemID                     INT IDENTITY(1,1) NOT NULL,
StockTakeID                         INT,
StockItemID                         INT,
StockItemLocationID                 TINYINT,
SalesOrderPhaseID                   INT,
SnapshotQty                         DECIMAL(10, 4),
CountedQty                          DECIMAL(10, 4),
CreatedDate                         DATETIME,
TotalValue                          MONEY,
IsCounted                           BIT,
SnapShotStockQty                    DECIMAL(10, 4),
SnapShotCostingQuantity             DECIMAL(10, 4),
SnapShotUnitCost                    DECIMAL(10, 4),
StockItemCategoryID                 INT,
StockTakeSheetID                    INT,
SystemTotalValue                    DECIMAL(10, 4),
CountedTotalValue                   DECIMAL(10, 4),
WriteOffQuantity                    DECIMAL(10, 4),
CONSTRAINT PK_StockTakeItem PRIMARY KEY CLUSTERED ( StockTakeItemID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.SUBFurnitureCategory
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.SUBFurnitureCategory') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.SUBFurnitureCategory
GO
CREATE TABLE dbo.SUBFurnitureCategory
(
SUBFurnitureCategoryID              INT IDENTITY(1,1) NOT NULL,
FurnitureCategoryID                 INT,
EnglishDescription                  VARCHAR(50),
SpanishDescription                  VARCHAR(50),
CONSTRAINT PK_SUBFurnitureCategory PRIMARY KEY CLUSTERED ( SUBFurnitureCategoryID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.Supplier
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.Supplier') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.Supplier
GO
CREATE TABLE dbo.Supplier
(
SupplierID                          INT IDENTITY(1,1) NOT NULL,
CompanyName                         VARCHAR(64),
SupplierStatusID                    INT,
SupplierTypeID                      INT,
ParentSupplierID                    INT,
AccountCode                         VARCHAR(24),
TelNo                               VARCHAR(32),
Fax                                 VARCHAR(32),
Email                               VARCHAR(64),
WebURL                              VARCHAR(64),
SalesAreaID                         INT,
PaymentTermsType                    TINYINT,
PaymentTermsParam                   INT,
VATRefNo                            VARCHAR(24),
Notes                               VARCHAR(max),
DateEntered                         DATETIME,
DateAmended                         DATETIME,
EnteredByUserID                     INT,
AmendedByUserID                     INT,
DefaultAddressID                    INT,
DefaultContactID                    INT,
InvoiceParentCompany                BIT,
RazonSocial                         VARCHAR(100),
BancoIntermediario                  VARCHAR(100),
Numero_SWIFT                        VARCHAR(15),
Numero_ABA                          VARCHAR(15),
Rucnumber                           VARCHAR(25),
SupplierReferenceID                 VARCHAR(15),
PurchasingTermsType                 INT,
MainAddress1                        VARCHAR(100),
MainAddress2                        VARCHAR(100),
MainTown                            VARCHAR(64),
MainCounty                          VARCHAR(64),
MainCountry                         VARCHAR(64),
DefaultCurrency                     INT,
CONSTRAINT PK_Supplier PRIMARY KEY CLUSTERED ( SupplierID )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.SupplierContact
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.SupplierContact') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.SupplierContact
GO
CREATE TABLE dbo.SupplierContact
(
SupplierContactID                   INT IDENTITY(1,1) NOT NULL,
SupplierID                          INT,
Title                               VARCHAR(8),
FirstName                           VARCHAR(32),
LastName                            VARCHAR(32),
TelNo                               VARCHAR(32),
Email                               VARCHAR(64),
Mobile                              VARCHAR(32),
ContactType                         INT,
ContactOptions                      INT,
IsActive                            BIT NOT NULL,
DateStart                           DATETIME,
DateEnd                             DATETIME,
Position                            VARCHAR(32),
CONSTRAINT PK_SupplierContactID PRIMARY KEY CLUSTERED ( SupplierContactID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.SysConstantValue
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.SysConstantValue') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.SysConstantValue
GO
CREATE TABLE dbo.SysConstantValue
(
ConstantValueID                     INT IDENTITY(1,1) NOT NULL,
ConstantValueListID                 INT,
EnumEntry                           INT,
DisplayOrder                        INT,
Name                                VARCHAR(100),
Value                               VARCHAR(50),
DataType                            TINYINT,
PermissionID                        INT,
GroupID                             INT,
Protect                             BIT,
ArchiveOnly                         BIT,
CONSTRAINT PK_SysConstantValue PRIMARY KEY CLUSTERED ( ConstantValueID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.SysConstantValueList
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.SysConstantValueList') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.SysConstantValueList
GO
CREATE TABLE dbo.SysConstantValueList
(
ConstantValueListID                 INT IDENTITY(1,1) NOT NULL,
EnumName                            VARCHAR(50),
DisplayOrder                        INT,
DefaultEnumEntry                    INT,
PermissionID                        INT,
CONSTRAINT PK_SysConstantValueList PRIMARY KEY CLUSTERED ( ConstantValueListID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.sysdiagrams
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.sysdiagrams') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.sysdiagrams
GO
CREATE TABLE dbo.sysdiagrams
(
name                                SYSNAME NOT NULL,
principal_id                        INT NOT NULL,
diagram_id                          INT IDENTITY(1,1) NOT NULL,
version                             INT,
definition                          VARBINARY(max),
CONSTRAINT PK__sysdiagr__C2B05B615969B630 PRIMARY KEY CLUSTERED ( diagram_id ),
CONSTRAINT UK_principal_name UNIQUE NONCLUSTERED(principal_id,name )
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.SysValueItem
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.SysValueItem') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.SysValueItem
GO
CREATE TABLE dbo.SysValueItem
(
ValueItemID                         INT IDENTITY(1,1) NOT NULL,
ValueItemListID                     INT,
DisplayOrder                        INT,
Value                               INT,
Description                         VARCHAR(50),
Protect                             BIT NOT NULL,
ArchiveOnly                         BIT NOT NULL,
CONSTRAINT PK_SysValueItem PRIMARY KEY CLUSTERED ( ValueItemID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.SysValueItemList
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.SysValueItemList') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.SysValueItemList
GO
CREATE TABLE dbo.SysValueItemList
(
ValueItemListID                     INT IDENTITY(1,1) NOT NULL,
DisplayOrder                        INT,
Description                         VARCHAR(50),
DefaultValue                        INT,
DisplayOrderType                    INT,
CONSTRAINT PK_SysValueItemList PRIMARY KEY CLUSTERED ( ValueItemListID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.Tally
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.Tally') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.Tally
GO
CREATE TABLE dbo.Tally
(
TallyID                             INT IDENTITY(1,1) NOT NULL,
Tally                               INT,
Description                         VARCHAR(20),
StartingValue                       INT,
EndingValue                         INT,
Increment                           INT,
LoopBack                            BIT DEFAULT ((0)),
ResetCode                           INT,
ResetEnabled                        BIT,
CONSTRAINT PK_Tally PRIMARY KEY CLUSTERED ( TallyID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.TEntry
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.TEntry') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.TEntry
GO
CREATE TABLE dbo.TEntry
(
TEntryID                            INT IDENTITY(1,1) NOT NULL,
ParentID                            INT,
Entry                               VARCHAR(100),
CONSTRAINT PK_TEntry PRIMARY KEY CLUSTERED ( TEntryID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.TimeSheetEntry
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.TimeSheetEntry') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.TimeSheetEntry
GO
CREATE TABLE dbo.TimeSheetEntry
(
TimeSheetEntryID                    INT IDENTITY(1,1) NOT NULL,
TimeSheetEntryTypeID                INT,
EmployeeID                          INT,
WorkOrderID                         INT,
StartTime                           DATETIME,
EndTime                             DATETIME,
Note                                VARCHAR(250),
WorkcentreID                        INT,
BreakMins                           INT,
OverTimeMinutes                     INT,
CONSTRAINT PK_TimeSheetEntry PRIMARY KEY CLUSTERED ( TimeSheetEntryID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.UserGrouping
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.UserGrouping') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.UserGrouping
GO
CREATE TABLE dbo.UserGrouping
(
UserGroupingID                      INT IDENTITY(1,1) NOT NULL,
UserID                              INT,
GroupingID                          INT,
CONSTRAINT PK_UserGrouping PRIMARY KEY CLUSTERED ( UserGroupingID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.UserList
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.UserList') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.UserList
GO
CREATE TABLE dbo.UserList
(
UserID                              INT IDENTITY(1,1) NOT NULL,
UserName                            VARCHAR(30),
Abbreviation                        VARCHAR(20),
Contact                             INT,
DateLastLoggedOn                    DATETIME,
Active                              BIT,
EmployeeID                          INT,
ConcurrentUserID                    INT,
TrainingOnly                        BIT,
DatePasswordSet                     DATETIME,
FailedAttempts                      TINYINT,
DateStart                           DATETIME,
DateEnd                             DATETIME,
IsDeleted                           BIT DEFAULT ((0)),
PinActive                           BIT,
RefreshPin                          BIT,
HomeFormID                          INT,
CONSTRAINT PK_UserList PRIMARY KEY CLUSTERED ( UserID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.ValueItem
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ValueItem') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ValueItem
GO
CREATE TABLE dbo.ValueItem
(
ValueItemID                         INT IDENTITY(1,1) NOT NULL,
ValueItemListID                     INT,
DisplayOrder                        INT,
Value                               INT,
Description                         VARCHAR(50),
Protect                             BIT NOT NULL,
ArchiveOnly                         BIT NOT NULL,
CONSTRAINT PK_ValueItem PRIMARY KEY CLUSTERED ( ValueItemID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.ValueItemList
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.ValueItemList') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.ValueItemList
GO
CREATE TABLE dbo.ValueItemList
(
ValueItemListID                     INT IDENTITY(1,1) NOT NULL,
DisplayOrder                        INT,
Description                         VARCHAR(50),
DefaultValue                        INT,
DisplayOrderType                    INT,
CONSTRAINT PK_ValueItemList PRIMARY KEY CLUSTERED ( ValueItemListID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.VATRate
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.VATRate') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.VATRate
GO
CREATE TABLE dbo.VATRate
(
VATRateRecordID                     INT IDENTITY(1,1) NOT NULL,
VATRateCode                         INT NOT NULL,
VATRate                             DECIMAL(9, 4) DEFAULT ((0)),
Protected                           BIT DEFAULT ((0)) NOT NULL,
rowversion                          TIMESTAMP NOT NULL,
DateStart                           DATETIME,
DateEnd                             DATETIME,
CONSTRAINT PK_VATRate PRIMARY KEY CLUSTERED ( VATRateRecordID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.VATRateCode
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.VATRateCode') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.VATRateCode
GO
CREATE TABLE dbo.VATRateCode
(
VATRateCode                         INT NOT NULL,
DisplayOrder                        INT DEFAULT ((0)),
Description                         VARCHAR(32),
DateEntered                         DATETIME DEFAULT (getdate()),
CONSTRAINT PK_VATRateCode PRIMARY KEY CLUSTERED ( VATRateCode )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.WoodSpecie
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.WoodSpecie') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.WoodSpecie
GO
CREATE TABLE dbo.WoodSpecie
(
WoodSpecieID                        INT IDENTITY(1,1) NOT NULL,
EnglishDescription                  NCHAR(50),
SpanishDescription                  NCHAR(50),
Density                             FLOAT,
PriceBracket                        TINYINT,
CONSTRAINT PK_WoodSpecie PRIMARY KEY CLUSTERED ( WoodSpecieID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.WoodValue
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.WoodValue') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.WoodValue
GO
CREATE TABLE dbo.WoodValue
(
WoodValueID                         INT IDENTITY(1,1) NOT NULL,
SpeciesID                           INT,
WoodValueDate                       DATETIME,
WoodValueBF                         MONEY,
CONSTRAINT PK_WoodValue PRIMARY KEY CLUSTERED ( WoodValueID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.WorkOrder
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.WorkOrder') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.WorkOrder
GO
CREATE TABLE dbo.WorkOrder
(
WorkOrderID                         INT IDENTITY(1,1) NOT NULL,
SalesOrderID                        INT,
ProductTypeID                       INT,
Quantity                            INT,
WorkOrderNo                         VARCHAR(20),
Description                         VARCHAR(1000),
ProductID                           INT,
PlannedStartDate                    DATETIME,
UnitPrice                           DECIMAL(9, 3),
WorkOrderType                       INT,
EmployeeID                          INT,
WoodSpecieID                        INT,
WoodFinish                          INT,
WorkcentreID                        INT,
ImageFile                           VARCHAR(255),
Machining                           BIT,
Assembley                           BIT,
Sanding                             BIT,
Painting                            BIT,
MetalWork                           BIT,
Upholstery                          BIT,
SubContract                         BIT,
SalesOrderItemID                    INT,
FurnitureCategoryID                 INT,
SubFurnitureCategoryID              INT,
QtyPerSalesItem                     INT,
DrawingDate                         DATETIME,
PlannedDeliverDate                  DATETIME,
TotalPieces                         DECIMAL(18, 0),
isInternal                          BIT,
SalesOrderItemWOIndex               INT,
CONSTRAINT PK_WorkOrder PRIMARY KEY CLUSTERED ( WorkOrderID )
)
ON [PRIMARY]

GO


----------------------------------------------------
-- dbo.WorkOrderAllocation
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.WorkOrderAllocation') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.WorkOrderAllocation
GO
CREATE TABLE dbo.WorkOrderAllocation
(
WorkOrderAllocationID               INT IDENTITY(1,1) NOT NULL,
WorkOrderID                         INT,
PhaseItemComponentID                INT,
CONSTRAINT PK_WorkOrderAllocation PRIMARY KEY CLUSTERED ( WorkOrderAllocationID )
)
ON [PRIMARY]

GO
----------------------------------------------------
-- dbo.WorkOrderMilestoneStatus
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.WorkOrderMilestoneStatus') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table dbo.WorkOrderMilestoneStatus
GO
CREATE TABLE dbo.WorkOrderMilestoneStatus
(
WorkOrderMilestoneStatusID          INT IDENTITY(1,1) NOT NULL,
WorkOrderID                         INT,
MilestoneENUM                       TINYINT,
Status                              TINYINT,
TargetDate                          DATETIME,
ActualDate                          DATETIME,
Notes                               VARCHAR(1000),
CONSTRAINT pk_WorkOrderMilestoneStatus PRIMARY KEY CLUSTERED ( WorkOrderMilestoneStatusID )
)
ON [PRIMARY]

GO

/******************************************************
  Tables  End
******************************************************/
GO
/******************************************************
  Insert data   Begin
******************************************************/
GO


-----------------------------------------------------------
--Insert data into dbo.ApplicationActivity
-----------------------------------------------------------
ALTER TABLE dbo.ApplicationActivity NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.ApplicationActivity
GO

IF (IDENT_SEED('dbo.ApplicationActivity') IS NOT NULL )	SET IDENTITY_INSERT dbo.ApplicationActivity ON
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1','1','RTIS App Configuration','RTIS Set-up level of configuration','1',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('2','2','User Configuration','Client Expert User/Administrator','1',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('3','3','Change Password','User level change of password','2',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('4','4','ForceLockRemoval',NULL,'2',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('5','100','Sales',NULL,'3',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('6','200','Production',NULL,NULL,0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1006','300','Human Resources',NULL,'3',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1007','301','Employee Salaries',NULL,'3',1)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1008','300','Human Resources',NULL,'3',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1010','400','Purchase',NULL,'3',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1011','500','Inventory',NULL,NULL,NULL)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1012','101','Clientes','','4',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1013','102','Órdenes de Ventas','','4',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1014','103','Seguimiento de Venta','','4',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1015','201','Órden de Trabajo','','5',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1016','202','Órden de Trabajo Interna','','5',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1017','203','Seguimiento OT','','5',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1018','204','Entrada de Tiempo','','5',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1019','205','Reporte de Producción','','5',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1020','302','Empleados','','6',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1021','303','Reporte de Salario','','6',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1022','401','Proveedores','','7',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1023','402','Órden de Compra','','7',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1024','403','Admon. Órden Compra','','7',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1025','501','Arto. de Inventario.','','8',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1026','502','Picking Materiales','','8',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1027','503','Conteo de Inv.','','8',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1028','504','Reporte de Transacción','','8',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1029','505','Información de Inventario','','8',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1030','601','Reporte Invt.','','9',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1031','602','Reporte de Compañía','','9',0)
INSERT INTO dbo.ApplicationActivity (ApplicationActivityID,ActivityCode,ActivityArea,Notes,ApplicationModuleID,IsSensitive) VALUES('1032','603','Reporte de Consumo Madera.','','9',0)
IF (IDENT_SEED('dbo.ApplicationActivity') IS NOT NULL )	SET IDENTITY_INSERT dbo.ApplicationActivity OFF
GO
GO
ALTER TABLE dbo.ApplicationActivity CHECK CONSTRAINT ALL
GO



-----------------------------------------------------------
--Insert data into dbo.ApplicationModule
-----------------------------------------------------------
ALTER TABLE dbo.ApplicationModule NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.ApplicationModule
GO

IF (IDENT_SEED('dbo.ApplicationModule') IS NOT NULL )	SET IDENTITY_INSERT dbo.ApplicationModule ON
INSERT INTO dbo.ApplicationModule (ApplicationModuleID,Module) VALUES('1','General')
INSERT INTO dbo.ApplicationModule (ApplicationModuleID,Module) VALUES('2','System Admin')
INSERT INTO dbo.ApplicationModule (ApplicationModuleID,Module) VALUES('3','Module One')
INSERT INTO dbo.ApplicationModule (ApplicationModuleID,Module) VALUES('4','Ventas')
INSERT INTO dbo.ApplicationModule (ApplicationModuleID,Module) VALUES('5','Produccion')
INSERT INTO dbo.ApplicationModule (ApplicationModuleID,Module) VALUES('6','RRHH')
INSERT INTO dbo.ApplicationModule (ApplicationModuleID,Module) VALUES('7','Compras')
INSERT INTO dbo.ApplicationModule (ApplicationModuleID,Module) VALUES('8','Inventario')
INSERT INTO dbo.ApplicationModule (ApplicationModuleID,Module) VALUES('9','Contabilidad')
IF (IDENT_SEED('dbo.ApplicationModule') IS NOT NULL )	SET IDENTITY_INSERT dbo.ApplicationModule OFF
GO
GO
ALTER TABLE dbo.ApplicationModule CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.EmailSettings
-----------------------------------------------------------
ALTER TABLE dbo.EmailSettings NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.EmailSettings
GO

IF (IDENT_SEED('dbo.EmailSettings') IS NOT NULL )	SET IDENTITY_INSERT dbo.EmailSettings ON
INSERT INTO dbo.EmailSettings (EmailSettingsID,Description,DelMethod,Domain,Password,PickupDirectoryLocation,Port,SMTP,UseDefaultCredentials,UserName,EnableSSL,SecurityProtocol,DefaultToSpooler,SendAllToTest,DefaultEmailFromAddress,AlwaysSendAsPlainText) VALUES('1','Live','0',NULL,NULL,NULL,'25','mail.simplementemadera.com',0,NULL,0,'0',0,0,NULL,0)
IF (IDENT_SEED('dbo.EmailSettings') IS NOT NULL )	SET IDENTITY_INSERT dbo.EmailSettings OFF
GO
GO
ALTER TABLE dbo.EmailSettings CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.EmailStore
-----------------------------------------------------------
ALTER TABLE dbo.EmailStore NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.EmailStore
GO

IF (IDENT_SEED('dbo.EmailStore') IS NOT NULL )	SET IDENTITY_INSERT dbo.EmailStore ON
IF (IDENT_SEED('dbo.EmailStore') IS NOT NULL )	SET IDENTITY_INSERT dbo.EmailStore OFF
GO
GO
ALTER TABLE dbo.EmailStore CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.EmailTemplate
-----------------------------------------------------------
ALTER TABLE dbo.EmailTemplate NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.EmailTemplate
GO

IF (IDENT_SEED('dbo.EmailTemplate') IS NOT NULL )	SET IDENTITY_INSERT dbo.EmailTemplate ON
INSERT INTO dbo.EmailTemplate (EmailTemplateID,EmailTemplateEnum,DistributionEnum,Subject,Body) VALUES('1','1',NULL,NULL,'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>
		</title>
		<style type="text/css">
			.cs80D9435B{text-align:justify;text-indent:0pt;margin:0pt 0pt 0pt 0pt}
			.csA16174BA{color:#000000;background-color:transparent;font-family:Arial;font-size:10pt;font-weight:normal;font-style:normal;}
			.cs5E98E930{color:#000000;background-color:transparent;font-family:Arial;font-size:10pt;font-weight:bold;font-style:normal;}
			.cs95E872D0{text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt}
		</style>
	</head>
	<body>
		<p class="cs80D9435B"><span class="csA16174BA">Estimado proveedor </span><span class="cs5E98E930">{CompanyName}</span></p><p class="cs80D9435B"><span class="cs5E98E930">&nbsp;</span></p><p class="cs80D9435B"><span class="csA16174BA">Por favor, revise la Orden de Compra adjunta N&uacute;mero </span><span class="cs5E98E930">{PO}</span><span class="csA16174BA">. con valor neto de {CalculateNetValue}. Dicha Orden de Compra se require recibir el d&iacute;a de {RequiredDate}.</span></p><p class="cs80D9435B"><span class="csA16174BA">&nbsp;</span></p><p class="cs80D9435B"><span class="csA16174BA">&nbsp;</span></p><p class="cs80D9435B"><span class="csA16174BA">&nbsp;</span></p><p class="cs95E872D0"><span class="csA16174BA">Saludos</span></p></body>
</html>')
IF (IDENT_SEED('dbo.EmailTemplate') IS NOT NULL )	SET IDENTITY_INSERT dbo.EmailTemplate OFF
GO
GO
ALTER TABLE dbo.EmailTemplate CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.Grouping
-----------------------------------------------------------
ALTER TABLE dbo.Grouping NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.Grouping
GO

IF (IDENT_SEED('dbo.Grouping') IS NOT NULL )	SET IDENTITY_INSERT dbo.Grouping ON
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('1','RTIS Administrator','1')
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('2','Basic User','1')
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('3','Guest','1')
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('4','Client Administrator','1')
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('5','Human Resources','0')
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('6','Sensitive Information','0')
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('7','Bodega',NULL)
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('8','Producción',NULL)
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('9','Gerencia',NULL)
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('10','Contabilidad',NULL)
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('11','Compras',NULL)
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('12','Ingenieria',NULL)
INSERT INTO dbo.Grouping (GroupingID,GroupingName,ApplicationID) VALUES('13','Ventas',NULL)
IF (IDENT_SEED('dbo.Grouping') IS NOT NULL )	SET IDENTITY_INSERT dbo.Grouping OFF
GO
GO
ALTER TABLE dbo.Grouping CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.GroupingApplicationActivity
-----------------------------------------------------------
ALTER TABLE dbo.GroupingApplicationActivity NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.GroupingApplicationActivity
GO

IF (IDENT_SEED('dbo.GroupingApplicationActivity') IS NOT NULL )	SET IDENTITY_INSERT dbo.GroupingApplicationActivity ON
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('1','1','1','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('2','1','2','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('3','1','3','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('4','2','3','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('5','4','3','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('6','4','2','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('7','2','6','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('8','2','5','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('9','2','1010','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('10','1','6','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('11','1','1010','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('12','1','5','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('13','2','1011','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('14','4','1011','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('15','1','1011','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('16','6','1007','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('17','5','1006','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('18','5','1008','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('19','2','1012','1')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('20','2','1013','1')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('21','12','1011','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('22','12','6','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('23','12','1025','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('24','12','1027','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('25','12','1029','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('26','12','1026','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('27','12','1028','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('28','12','5','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('29','12','1018','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('30','12','1015','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('31','12','1016','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('32','12','1019','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('33','12','1017','1')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('34','12','1012','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('35','12','1013','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('36','12','1014','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('37','8','1011','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('38','8','6','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('39','8','1025','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('40','8','1029','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('41','8','1028','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('42','8','5','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('43','8','1018','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('44','8','1015','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('45','8','1016','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('46','8','1019','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('47','8','1017','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('48','8','1013','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('49','8','1020','4')
INSERT INTO dbo.GroupingApplicationActivity (GroupingApplicationActivityID,GroupingID,ApplicationActivityID,PermissionID) VALUES('50','8','1021','4')
IF (IDENT_SEED('dbo.GroupingApplicationActivity') IS NOT NULL )	SET IDENTITY_INSERT dbo.GroupingApplicationActivity OFF
GO
GO
ALTER TABLE dbo.GroupingApplicationActivity CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.HostCompany
-----------------------------------------------------------
ALTER TABLE dbo.HostCompany NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.HostCompany
GO

IF (IDENT_SEED('dbo.HostCompany') IS NOT NULL )	SET IDENTITY_INSERT dbo.HostCompany ON
INSERT INTO dbo.HostCompany (HostCompanyID,CompanyName,CompanyNumber,VATRegNo,TelNo,Fax,Email,WebURL,Address1,Address2,Address3,Town,County,PostCode,Country,Notes,Abreviation) VALUES('1','A Company',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL)
IF (IDENT_SEED('dbo.HostCompany') IS NOT NULL )	SET IDENTITY_INSERT dbo.HostCompany OFF
GO
GO
ALTER TABLE dbo.HostCompany CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.LabelDefinition
-----------------------------------------------------------
ALTER TABLE dbo.LabelDefinition NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.LabelDefinition
GO

IF (IDENT_SEED('dbo.LabelDefinition') IS NOT NULL )	SET IDENTITY_INSERT dbo.LabelDefinition ON
INSERT INTO dbo.LabelDefinition (LabelDefinitionID,LabelDefName,TopMargin,LeftMargin,LabelHeight,LabelWidth,PrintHeight,PrintWidth,NoOfColumns,NoOfRows,ReportLabelType,PageHeight,PageWidth,PrinterName) VALUES('1','1',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SMM_Label')
IF (IDENT_SEED('dbo.LabelDefinition') IS NOT NULL )	SET IDENTITY_INSERT dbo.LabelDefinition OFF
GO
GO
ALTER TABLE dbo.LabelDefinition CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.LookUpField
-----------------------------------------------------------
ALTER TABLE dbo.LookUpField NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.LookUpField
GO

IF (IDENT_SEED('dbo.LookUpField') IS NOT NULL )	SET IDENTITY_INSERT dbo.LookUpField ON
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('1','1','1','UserID','UserID','1','1',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('2','1','2','UserName','Name','4','1',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('3','1','3','Abbreviation','Abbreviation','4','1',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('4','1','4','DateLastLoggedOn','Last Logged On','4','1',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('5','1','5','Active','Active','4','1',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('6','2','1','GroupingID','GroupingID','4','0',NULL,NULL,NULL,NULL,'','0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('7','2','2','GroupingName','GroupingName','4','0',NULL,NULL,NULL,NULL,'','0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('8','3','2','DisplayOrder','Display Order','4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('9','3','3','LookUpTableDescription','Description','4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('10','3','4','TableName','Table Name','4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('11','3','5','KeyIDFieldName','Key ID Field Name','4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('12','3','6','DisplayFieldName','Display Field Name','4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('13','3','7','ProtectedFieldName','Protected Field Name','4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('14','3','8','PermissionID','Permission Level','4','0','Permission','PermissionID','Permission',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('15','3','9','ActivityCode','Activity Code','4','0','ApplicationActivity','ActivityCode','ActivityArea','(None: Use Permission Level)',NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('16','3','10','OrderModeENUM','Display Order Mode','4','0','OrderMode','OrderModeENUM','OrderMode',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('17','3','11','GroupKeyFieldName','Group Key Field Name','4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('18','3','12','GroupKeyValue','Group Key Value','4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('19','3','13','SelectionCode','Selection Code','4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('20','3','14','EnableValidation','Enable Validation','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('21','3','15','ArchiveFieldName','Archive Field Name','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('22','3','1','LookUpTableID','LookUpTableID','1','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('23','4','1','LookUpTableID','LookUp Table','4','0','LookUpTable','LookUpTableID','LookUpTableDescription',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('24','4','2','DisplayOrder',NULL,'4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('25','4','3','FieldName',NULL,'4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('26','4','4','DisplayName',NULL,'4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('27','4','5','PermissionID','Permission Level','4','0','Permission','PermissionID','Permission',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('28','4','6','ActivityCode','Activity Code','4','0','ApplicationActivity','ActivityCode','ActivityArea','(None: Use Permission Level)',NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('29','4','7','TranslationTableName','Translation Table Name','4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('30','4','8','TranslationKeyFieldName','Translation Key Field','4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('31','4','9','TranslationFieldName','Translation Field Name','4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('32','4','10','TranslationNullDisplay','''Zero'' Value Display','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('33','4','11','SetValue','Automatic Value','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('34','4','12','TallyID','Next Tally ID','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('35','5','1','GroupingID','User Group','4','0','Grouping','GroupingID','GroupingName',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('36','5','2','ApplicationActivityID','Activity','4','0','ApplicationActivity','ApplicationActivityID','ActivityArea',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('37','5','3','PermissionID','Permission','4','0','Permission','PermissionID','Permission',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('38','6','2','UserID','User','4','0','UserList','UserID','UserName',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('39','6','1','GroupingID','Group','4','0','Grouping','GroupingID','GroupingName',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('40','7','1','LookUpTableID',NULL,'4','0','LookUpTable','LookUpTableID','LookUpTableDescription',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('41','7','2','DisplayOrder',NULL,'4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('42','7','3','Name',NULL,'4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('43','7','4','GroupLookUpTableID',NULL,'4','0','LookUpTable','LookUpTableID','LookUpTableDescription',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('44','7','5','GroupKeyFieldName',NULL,'4','0',NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('45','7','6','TriggerActivityCode',NULL,'4','0','ApplicationActivity','ApplicationActivityID','ActivityArea',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('46','7','7','ActivityCode',NULL,'4','0','ApplicationActivity','ApplicationActivityID','ActivityArea',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('47','8','2','GroupingID','Group','4','0','Grouping','GroupingID','GroupingName',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('48','8','1','UserID','User','4','0','UserList','UserID','UserName',NULL,NULL,NULL)
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('49','11','1','WoodSpecieID','WoodSpecieID','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('50','11','2','EnglishDescription','EnglishDescription','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('51','11','3','SpanishDescription','SpanishDescription','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('52','11','4','Density','Density','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('53','11','5','PriceBracket','PriceBracket','4','0','Select * from ValueItem Where ValueItemListID = 3','ValueItemID','Description',NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('54','2023','1','EmailTemplateID','EmailTemplateID','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('55','2023','2','EmailTemplateEnum','EmailTemplateEnum','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('56','2023','3','DistributionEnum','DistributionEnum','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('57','2023','4','Subject','Subject','4','0',NULL,NULL,NULL,NULL,NULL,'0')
INSERT INTO dbo.LookUpField (LookupFieldID,LookUpTableID,DisplayOrder,FieldName,DisplayName,PermissionID,ActivityCode,TranslationTableName,TranslationKeyFieldName,TranslationFieldName,TranslationNullDisplay,SetValue,TallyID) VALUES('58','2023','5','Body','Body','4','0','popupHTML',NULL,NULL,NULL,NULL,'0')
IF (IDENT_SEED('dbo.LookUpField') IS NOT NULL )	SET IDENTITY_INSERT dbo.LookUpField OFF
GO
GO
ALTER TABLE dbo.LookUpField CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.LookUpLink
-----------------------------------------------------------
ALTER TABLE dbo.LookUpLink NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.LookUpLink
GO

IF (IDENT_SEED('dbo.LookUpLink') IS NOT NULL )	SET IDENTITY_INSERT dbo.LookUpLink ON
INSERT INTO dbo.LookUpLink (LookupLinkID,LookUpTableID,DisplayOrder,Name,GroupLookUpTableID,GroupKeyFieldName,TriggerActivityCode,ActivityCode) VALUES('1','3','1','Fields','4','LookUpTableID','0','1')
INSERT INTO dbo.LookUpLink (LookupLinkID,LookUpTableID,DisplayOrder,Name,GroupLookUpTableID,GroupKeyFieldName,TriggerActivityCode,ActivityCode) VALUES('2','3','2','Links','7','LookUpTableID','0','1')
INSERT INTO dbo.LookUpLink (LookupLinkID,LookUpTableID,DisplayOrder,Name,GroupLookUpTableID,GroupKeyFieldName,TriggerActivityCode,ActivityCode) VALUES('3','2','1','Permissions','5','GroupingID','0','1')
INSERT INTO dbo.LookUpLink (LookupLinkID,LookUpTableID,DisplayOrder,Name,GroupLookUpTableID,GroupKeyFieldName,TriggerActivityCode,ActivityCode) VALUES('4','1','1','Groups','8','UserID','0','1')
INSERT INTO dbo.LookUpLink (LookupLinkID,LookUpTableID,DisplayOrder,Name,GroupLookUpTableID,GroupKeyFieldName,TriggerActivityCode,ActivityCode) VALUES('5','2','2','Users','6','GroupingID','0','1')
INSERT INTO dbo.LookUpLink (LookupLinkID,LookUpTableID,DisplayOrder,Name,GroupLookUpTableID,GroupKeyFieldName,TriggerActivityCode,ActivityCode) VALUES('6','1','2','Password','0','UserID','3','1')
IF (IDENT_SEED('dbo.LookUpLink') IS NOT NULL )	SET IDENTITY_INSERT dbo.LookUpLink OFF
GO
GO
ALTER TABLE dbo.LookUpLink CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.LookUpSelection
-----------------------------------------------------------
ALTER TABLE dbo.LookUpSelection NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.LookUpSelection
GO

IF (IDENT_SEED('dbo.LookUpSelection') IS NOT NULL )	SET IDENTITY_INSERT dbo.LookUpSelection ON
INSERT INTO dbo.LookUpSelection (LookUpSelectionCode,DisplayOrder,MenuDescription,MenuVisible,MenuExpanded) VALUES('1','1','LookUp Table Set-Up',1,0)
INSERT INTO dbo.LookUpSelection (LookUpSelectionCode,DisplayOrder,MenuDescription,MenuVisible,MenuExpanded) VALUES('2','2','User Set-up',1,1)
INSERT INTO dbo.LookUpSelection (LookUpSelectionCode,DisplayOrder,MenuDescription,MenuVisible,MenuExpanded) VALUES('3','3','Value Items',1,1)
IF (IDENT_SEED('dbo.LookUpSelection') IS NOT NULL )	SET IDENTITY_INSERT dbo.LookUpSelection OFF
GO
GO
ALTER TABLE dbo.LookUpSelection CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.LookUpTable
-----------------------------------------------------------
ALTER TABLE dbo.LookUpTable NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.LookUpTable
GO

IF (IDENT_SEED('dbo.LookUpTable') IS NOT NULL )	SET IDENTITY_INSERT dbo.LookUpTable ON
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('1','1','User List','UserList','UserID','UserName',NULL,'4','1','2',NULL,'0','2',0,NULL,'4',NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('2','2','Groups','Grouping','GroupingID','GroupingName',NULL,'4','1','2',NULL,'0','2',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('3','6','LookUpTable','LookUpTable','LookUpTableID','LookUpTableDescription',NULL,'4','1','1',NULL,'0','1',1,NULL,'1',NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('4','7','LookUpField','LookUpField','LookUpFieldID','FieldName',NULL,'4','1','1','LookUpTableID','0','0',0,NULL,'2',NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('5','3','Group Permissions','GroupingApplicationActivity','GroupingApplicationActivityID','GroupingApplicationActivityID',NULL,'4','1','2','GroupingID','0','2',0,NULL,'3',NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('6','4','Users by Group','UserGrouping','UserGroupingID','UserGroupingID',NULL,'4','1','2','GroupingID','0','2',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('7','8','LookUpLink','LookUpLink','LookUpLinkID','Name',NULL,'4','1','1','LookUpTableID','0','0',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('8','5','Groups by User','UserGrouping','UserGroupingID','UserGroupingID',NULL,'4','1','2','UserID','0','2',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('9','9','País','ValueItem','ValueItemID','Description',NULL,'4','1','1','ValueItemListID','1','5',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('10','10','Tipos de Contrato','ValueItem','ValueItemID','Description',NULL,'4','1','1','ValueItemListID','2','5',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('11','11','Especies de Maderas','WoodSpecie','WoodSpecieID','EnglishDescription',NULL,'4','1','2',NULL,'0','7',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('12','12','Rango de Precios','ValueItem','ValueItemID','Description',NULL,'4','1','1','ValueItemListID','3','5',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('13','13','Términos de Pagos','ValueItem','ValueItemID','Description',NULL,'4','1','1','ValueItemListID','4','8',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('14','14','Tipos de OT','ValueItem','ValueItemID','Description',NULL,'4','1','1','ValueItemListID','5','6',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('15','15','Tipos de Acabado','ValueItem','ValueItemID','Description',NULL,'4','1','1','ValueItemListID','6','7',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('16','16','Términos de Ventas','ValueItem','ValueItemID','Description',NULL,'4','1','1','ValueItemListID','7','8',0,'',NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('1015','17','Material','ValueItem','ValueItemID','Description',NULL,'4','1','1','ValueItemListID','8','7',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('1016','18','Calidad','ValueItem','ValueItemID','Description',NULL,'4','1','2','ValueItemListID','9','7',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('1017','19','Categoría','FurnitureCategory','FurnitureCategoryID','EnglishDescription',NULL,'4','1','2',NULL,'0','5',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('1018','20','Sub Categoría','SUBFurnitureCategory','SUBFurnitureCategoryID','EnglishDescription',NULL,'4','1','2',NULL,'0','5',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('1019','21','Términos de Compras','ValueItem','ValueItemID','Description',NULL,'4','1','1','10',NULL,'7',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('1020','22','Supplier','Supplier','SupplierID','CompanyName',NULL,'4','1','2',NULL,'0','7',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('1021','23','Tasa de Cambio','ExchangeRate','ExchangeRateID','ExchangeRateValue',NULL,'4','1','2',NULL,'0','7',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('1022','24','Precio de Especie de Madera','WoodValue','WoodValueID','WoodValueBF',NULL,'4','1','2',NULL,'0','5',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('2023','25','Plantilla de Email','EmailTemplate','EmailTemplateID',NULL,NULL,'4',NULL,NULL,NULL,NULL,'6',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('3023','26','Tasa de Impuestos','VATRate','VATRateRecordID','VATRate',NULL,'4','1','2',NULL,NULL,'7',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('4023','27','Tipos de Casas','HouseType','HouseTypeID','Name',NULL,'4','1','2',NULL,NULL,'6',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('5023','28','Tipo de Estructura','ProductStructureType','ProductStructureTypeID','Description',NULL,'4','1','2',NULL,NULL,'7',0,NULL,NULL,NULL)
INSERT INTO dbo.LookUpTable (LookUpTableID,DisplayOrder,LookUpTableDescription,TableName,KeyIDFieldName,DisplayFieldName,ProtectedFieldName,PermissionID,ActivityCode,OrderModeENUM,GroupKeyFieldName,GroupKeyValue,SelectionCode,EnableValidation,ArchiveFieldName,ValidationCode,LayoutFileName) VALUES('5024','29','Tipo de Instalación','ProductInstallationType','ProductInstallationTypeID','Description',NULL,'4','1','2',NULL,NULL,'7',0,NULL,NULL,NULL)
IF (IDENT_SEED('dbo.LookUpTable') IS NOT NULL )	SET IDENTITY_INSERT dbo.LookUpTable OFF
GO
GO
ALTER TABLE dbo.LookUpTable CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.OrderMode
-----------------------------------------------------------
ALTER TABLE dbo.OrderMode NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.OrderMode
GO

IF (IDENT_SEED('dbo.OrderMode') IS NOT NULL )	SET IDENTITY_INSERT dbo.OrderMode ON
INSERT INTO dbo.OrderMode (OrderModeENUM,OrderMode,DisplayOrder) VALUES('0','Natural Order','1')
INSERT INTO dbo.OrderMode (OrderModeENUM,OrderMode,DisplayOrder) VALUES('1','Display Order','2')
INSERT INTO dbo.OrderMode (OrderModeENUM,OrderMode,DisplayOrder) VALUES('2','Alpha Asc','3')
INSERT INTO dbo.OrderMode (OrderModeENUM,OrderMode,DisplayOrder) VALUES('3','Alpha Desc','4')
IF (IDENT_SEED('dbo.OrderMode') IS NOT NULL )	SET IDENTITY_INSERT dbo.OrderMode OFF
GO
GO
ALTER TABLE dbo.OrderMode CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.Permission
-----------------------------------------------------------
ALTER TABLE dbo.Permission NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.Permission
GO

IF (IDENT_SEED('dbo.Permission') IS NOT NULL )	SET IDENTITY_INSERT dbo.Permission ON
INSERT INTO dbo.Permission (PermissionID,Permission) VALUES('0','None')
INSERT INTO dbo.Permission (PermissionID,Permission) VALUES('1','View')
INSERT INTO dbo.Permission (PermissionID,Permission) VALUES('2','Edit')
INSERT INTO dbo.Permission (PermissionID,Permission) VALUES('3','Add')
INSERT INTO dbo.Permission (PermissionID,Permission) VALUES('4','Full')
IF (IDENT_SEED('dbo.Permission') IS NOT NULL )	SET IDENTITY_INSERT dbo.Permission OFF
GO
GO
ALTER TABLE dbo.Permission CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.Role
-----------------------------------------------------------
ALTER TABLE dbo.Role NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.Role
GO

IF (IDENT_SEED('dbo.Role') IS NOT NULL )	SET IDENTITY_INSERT dbo.Role ON
IF (IDENT_SEED('dbo.Role') IS NOT NULL )	SET IDENTITY_INSERT dbo.Role OFF
GO
GO
ALTER TABLE dbo.Role CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.RTISGlobal
-----------------------------------------------------------
ALTER TABLE dbo.RTISGlobal NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.RTISGlobal
GO

IF (IDENT_SEED('dbo.RTISGlobal') IS NOT NULL )	SET IDENTITY_INSERT dbo.RTISGlobal ON
INSERT INTO dbo.RTISGlobal (RTISGlobalID,AuxFilePath,SharedUserFilePath,DefaultExportPath,LastUpdated,ErrorLogPath,EmailSettingsID,DefaultEmailFrom,DataSet,VersionLogFile,PodioPath) VALUES('1','','\\192.168.1.5\Realtime\DataFiles','\\192.168.1.5\Realtime\DataFiles',NULL,'\\192.168.1.5\Realtime\ErrorLogs','1',NULL,NULL,NULL,'NexCloud')
INSERT INTO dbo.RTISGlobal (RTISGlobalID,AuxFilePath,SharedUserFilePath,DefaultExportPath,LastUpdated,ErrorLogPath,EmailSettingsID,DefaultEmailFrom,DataSet,VersionLogFile,PodioPath) VALUES('2','','\\192.168.1.5\Realtime\DataFilesUAT','\\192.168.1.5\Realtime\DataFilesUAT',NULL,'\\192.168.1.5\Realtime\ErrorLogs',NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.RTISGlobal (RTISGlobalID,AuxFilePath,SharedUserFilePath,DefaultExportPath,LastUpdated,ErrorLogPath,EmailSettingsID,DefaultEmailFrom,DataSet,VersionLogFile,PodioPath) VALUES('3','C:\realtime\Application','C:\RTIS',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.RTISGlobal (RTISGlobalID,AuxFilePath,SharedUserFilePath,DefaultExportPath,LastUpdated,ErrorLogPath,EmailSettingsID,DefaultEmailFrom,DataSet,VersionLogFile,PodioPath) VALUES('4','C:\realtime\Application','C:\RTIS',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO dbo.RTISGlobal (RTISGlobalID,AuxFilePath,SharedUserFilePath,DefaultExportPath,LastUpdated,ErrorLogPath,EmailSettingsID,DefaultEmailFrom,DataSet,VersionLogFile,PodioPath) VALUES('5','C:\RTISProjects\AgroForestal\CodeDev\AuxFiles','C:\RTISProjects\Company\TestUserFiles','C:\RTISProjects\AgroForestal\SystemFiles',NULL,NULL,'1',NULL,NULL,NULL,NULL)
IF (IDENT_SEED('dbo.RTISGlobal') IS NOT NULL )	SET IDENTITY_INSERT dbo.RTISGlobal OFF
GO
GO

set dateformat YMD

ALTER TABLE dbo.RTISGlobal CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.Shift
-----------------------------------------------------------
ALTER TABLE dbo.Shift NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.Shift
GO

IF (IDENT_SEED('dbo.Shift') IS NOT NULL )	SET IDENTITY_INSERT dbo.Shift ON
INSERT INTO dbo.Shift (ShiftID,Description) VALUES('1','Std')
IF (IDENT_SEED('dbo.Shift') IS NOT NULL )	SET IDENTITY_INSERT dbo.Shift OFF
GO
GO
ALTER TABLE dbo.Shift CHECK CONSTRAINT ALL
GO


ALTER TABLE dbo.ShiftDetails NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.ShiftDetails
GO

IF (IDENT_SEED('dbo.ShiftDetails') IS NOT NULL )	SET IDENTITY_INSERT dbo.ShiftDetails ON
INSERT INTO dbo.ShiftDetails (ShiftDetailID,ShiftID,DayOfWeek,StartTime,EndTime) VALUES('1','1','1','1899-12-30 7:0:0','1899-12-30 17:0:0')
INSERT INTO dbo.ShiftDetails (ShiftDetailID,ShiftID,DayOfWeek,StartTime,EndTime) VALUES('2','1','2','1899-12-30 7:0:0','1899-12-30 17:0:0')
INSERT INTO dbo.ShiftDetails (ShiftDetailID,ShiftID,DayOfWeek,StartTime,EndTime) VALUES('3','1','3','1899-12-30 7:0:0','1899-12-30 17:0:0')
INSERT INTO dbo.ShiftDetails (ShiftDetailID,ShiftID,DayOfWeek,StartTime,EndTime) VALUES('4','1','4','1899-12-30 7:0:0','1899-12-30 17:0:0')
INSERT INTO dbo.ShiftDetails (ShiftDetailID,ShiftID,DayOfWeek,StartTime,EndTime) VALUES('5','1','5','1899-12-30 7:0:0','1899-12-30 15:0:0')
INSERT INTO dbo.ShiftDetails (ShiftDetailID,ShiftID,DayOfWeek,StartTime,EndTime) VALUES('6','1','6',NULL,NULL)
INSERT INTO dbo.ShiftDetails (ShiftDetailID,ShiftID,DayOfWeek,StartTime,EndTime) VALUES('7','1','7',NULL,NULL)
IF (IDENT_SEED('dbo.ShiftDetails') IS NOT NULL )	SET IDENTITY_INSERT dbo.ShiftDetails OFF
GO
GO
ALTER TABLE dbo.ShiftDetails CHECK CONSTRAINT ALL
GO

ALTER TABLE dbo.StageType NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.StageType
GO

IF (IDENT_SEED('dbo.StageType') IS NOT NULL )	SET IDENTITY_INSERT dbo.StageType ON
IF (IDENT_SEED('dbo.StageType') IS NOT NULL )	SET IDENTITY_INSERT dbo.StageType OFF
GO
GO
ALTER TABLE dbo.StageType CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.Tally
-----------------------------------------------------------
ALTER TABLE dbo.Tally NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.Tally
GO

IF (IDENT_SEED('dbo.Tally') IS NOT NULL )	SET IDENTITY_INSERT dbo.Tally ON
INSERT INTO dbo.Tally (TallyID,Tally,Description,StartingValue,EndingValue,Increment,LoopBack,ResetCode,ResetEnabled) VALUES('1','1263','Order de Trabajo','1000','99999','1',0,NULL,NULL)
INSERT INTO dbo.Tally (TallyID,Tally,Description,StartingValue,EndingValue,Increment,LoopBack,ResetCode,ResetEnabled) VALUES('2','1','OT INTERNA','1000','99999','1',0,NULL,NULL)
INSERT INTO dbo.Tally (TallyID,Tally,Description,StartingValue,EndingValue,Increment,LoopBack,ResetCode,ResetEnabled) VALUES('3','18','Orden de Compra','1000','99999','1',0,NULL,NULL)
INSERT INTO dbo.Tally (TallyID,Tally,Description,StartingValue,EndingValue,Increment,LoopBack,ResetCode,ResetEnabled) VALUES('1002','36','GRN Number','1000','99999','1',0,NULL,NULL)
IF (IDENT_SEED('dbo.Tally') IS NOT NULL )	SET IDENTITY_INSERT dbo.Tally OFF
GO
GO
ALTER TABLE dbo.Tally CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.UserGrouping
-----------------------------------------------------------
ALTER TABLE dbo.UserGrouping NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.UserGrouping
GO

IF (IDENT_SEED('dbo.UserGrouping') IS NOT NULL )	SET IDENTITY_INSERT dbo.UserGrouping ON
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1','1','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('4','1','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1030','1','3')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('2','2','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('3','3','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('7','3','4')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('11','6','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('8','6','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1107','6','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1099','6','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1097','6','11')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1098','6','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1100','6','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('14','7','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('12','7','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1043','7','3')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1141','7','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1143','7','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1142','7','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1145','7','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('17','8','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('15','8','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1128','8','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1137','8','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1131','8','10')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1129','8','11')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1135','8','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1138','8','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('20','9','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('18','9','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1108','9','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1075','9','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1074','9','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1076','9','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1020','16','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1021','16','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1022','16','4')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1010','1006','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1008','1006','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1044','1006','5')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1047','1006','6')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1127','1006','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1136','1006','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1133','1006','9')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1132','1006','10')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1130','1006','11')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1134','1006','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1139','1006','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1013','1007','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1011','1007','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1121','1007','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1126','1007','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1016','1008','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1014','1008','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1109','1008','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1072','1008','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1071','1008','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1073','1008','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1019','1009','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1017','1009','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1119','1009','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1090','1009','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1089','1009','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1091','1009','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1027','1011','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1028','1011','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1031','1012','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1032','1012','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1033','1012','3')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1110','1012','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1078','1012','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1077','1012','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1079','1012','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1070','1013','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1035','1013','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1140','1013','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1105','1013','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1104','1013','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1144','1013','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1046','1014','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1037','1014','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1106','1014','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1095','1014','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1093','1014','10')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1092','1014','11')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1094','1014','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1096','1014','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1041','1015','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1039','1015','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1042','1015','3')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1112','1015','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1117','1015','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1115','1015','9')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1114','1015','10')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1113','1015','11')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1116','1015','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1118','1015','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1069','1016','5')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1048','1016','6')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1052','1017','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1049','1017','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1051','1017','3')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1068','1017','5')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1120','1017','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1084','1017','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1082','1017','9')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1081','1017','10')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1080','1017','11')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1083','1017','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1085','1017','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1056','1018','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1053','1018','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1055','1018','3')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1111','1018','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1087','1018','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1086','1018','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1088','1018','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1059','1019','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1057','1019','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1122','1019','7')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1123','1019','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1124','1019','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1125','1019','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1063','1020','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1060','1020','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1062','1020','3')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1146','1020','13')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1067','1021','1')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1064','1021','2')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1066','1021','3')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1102','1021','8')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1101','1021','12')
INSERT INTO dbo.UserGrouping (UserGroupingID,UserID,GroupingID) VALUES('1103','1021','13')
IF (IDENT_SEED('dbo.UserGrouping') IS NOT NULL )	SET IDENTITY_INSERT dbo.UserGrouping OFF
GO
GO
ALTER TABLE dbo.UserGrouping CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.UserList
-----------------------------------------------------------
ALTER TABLE dbo.UserList NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.UserList
GO

IF (IDENT_SEED('dbo.UserList') IS NOT NULL )	SET IDENTITY_INSERT dbo.UserList ON
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1','RTISDev','RTIS - Configuration','3951','2020-9-21 10:15:13',1,'0','1',0,NULL,NULL,NULL,NULL,0,1,0,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('2','Administrator','Client Administator','4045',NULL,1,'4',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'0')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('3','Example User','sadsad','4045','2010-11-12 0:0:0',0,'2',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'2')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('4','Example User 2','asdasd','4045',NULL,0,'5',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,NULL)
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('5','Example Three','ET',NULL,NULL,0,'0',NULL,0,NULL,NULL,NULL,NULL,0,1,1,'0')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('6','mtellez','mtellez',NULL,'2020-3-25 2:20:51',1,'13',NULL,0,NULL,NULL,NULL,NULL,0,1,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('7','wmontes','wmontes',NULL,'2020-3-16 3:15:6',1,'15',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('8','rlazo','rlazo',NULL,'2020-3-12 10:28:2',1,'19',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'0')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('9','apalacios','apalacios',NULL,'2020-3-19 4:12:59',1,'14',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1006','rlopez',NULL,NULL,'2020-3-25 2:37:26',1,'0',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1007','layala',NULL,NULL,'2019-11-8 7:15:29',1,'0',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1008','arodriguez',NULL,NULL,'2020-3-25 10:43:38',1,'2086',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1009','jvasquez',NULL,NULL,'2020-3-25 8:20:37',1,'2085',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'0')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1010','egutierrez','egutierrez',NULL,'2020-3-17 10:27:34',1,'16',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1011','gmclean',NULL,NULL,'2019-12-10 1:50:4',1,'2082',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1012','cmejia','cmejia',NULL,'2020-3-23 3:26:53',1,'2084',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1013','wlacayo',NULL,NULL,'2020-3-9 5:43:18',1,'2088',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1014','lsilva',NULL,NULL,'2020-3-25 2:5:46',1,'2087',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1015','inventario',NULL,NULL,'2019-12-30 4:16:7',1,'0',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1016','Karen',NULL,NULL,'2020-3-5 11:55:19',1,'0',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1017','jrocha',NULL,NULL,'2020-3-19 1:18:26',1,'18',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1018','efernandez',NULL,NULL,'2020-3-25 11:28:2',1,'0',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1019','lgutierrez',NULL,NULL,'2020-2-21 11:23:58',1,'0',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1020','hgarcia',NULL,NULL,'2020-3-12 9:18:17',1,'0',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
INSERT INTO dbo.UserList (UserID,UserName,Abbreviation,Contact,DateLastLoggedOn,Active,EmployeeID,ConcurrentUserID,TrainingOnly,DatePasswordSet,FailedAttempts,DateStart,DateEnd,IsDeleted,PinActive,RefreshPin,HomeFormID) VALUES('1021','ralvarado',NULL,NULL,'2020-2-28 2:12:11',1,'0',NULL,0,NULL,NULL,NULL,NULL,0,0,NULL,'1')
IF (IDENT_SEED('dbo.UserList') IS NOT NULL )	SET IDENTITY_INSERT dbo.UserList OFF
GO
GO
ALTER TABLE dbo.UserList CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.ValueItem
-----------------------------------------------------------
ALTER TABLE dbo.ValueItem NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.ValueItem
GO

IF (IDENT_SEED('dbo.ValueItem') IS NOT NULL )	SET IDENTITY_INSERT dbo.ValueItem ON
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('4','1','1','1','Nicaragua',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('5','1','2','2','Central America',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('8','1','3','3','Estado Unidos',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('9','2','1','1','Hospitality',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('10','2','2','2','Contract',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('12','3',NULL,'1','Low',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('13','3',NULL,'2','Mid',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('14','3',NULL,'3','High',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('16','4','1','1','Contado',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('17','4','2','2','Crédito',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('18','4','3','3','Tarjeta de Crédito',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('19','5','1','1','Venta',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('20','5','2','2','Interno',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('21','5','3','3','Pre Venta',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('22','5','4','4','WM',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('1023','6','1','1','Poliuretano',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('1024','6','2','2','Poliester',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('1026','6','3','3','Aceites',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('1028','7','1','1','FOB',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('1029','7','2','2','CIF',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('2023','8','1','1','Madera Sólida',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('2024','8','2','2','Madera Láminada',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('2025','8','3','3','Madera Lam. FJ',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('2026','9','1','1','A',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('2028','9','2','2','A-B',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('2029','9','3','3','B',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('2030','9','4','4','B-C',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('2031','9','5','5','CN',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('2032','9','6','6','Slab',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('2034','8','4','4','Metal',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('2035','1','4','4','Uruguay',0,0)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('3038','6','4','4','Poliuretano Ext.',1,1)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('3039','8','5',NULL,'Plywood Fenolico 3/4"',1,1)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('3047','6','5','5','WOI-06 Indigo SW- Rough sawn',1,1)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('3053','2','3','3','Muestra',1,1)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('3060','1','5','5','Panamá',1,1)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('3061','1','6','6','Islas Virgenes Británicas',1,1)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('3062','6','6','6','MA-L-03.1 Green SM',1,1)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('3063','6','7','7','Euro walnut 100',1,1)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('3067','8','5','5','Plywood T1-11',1,1)
INSERT INTO dbo.ValueItem (ValueItemID,ValueItemListID,DisplayOrder,Value,Description,Protect,ArchiveOnly) VALUES('3068','10','1','1','Contado',0,0)
IF (IDENT_SEED('dbo.ValueItem') IS NOT NULL )	SET IDENTITY_INSERT dbo.ValueItem OFF
GO
GO
ALTER TABLE dbo.ValueItem CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.ValueItemList
-----------------------------------------------------------
ALTER TABLE dbo.ValueItemList NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.ValueItemList
GO

IF (IDENT_SEED('dbo.ValueItemList') IS NOT NULL )	SET IDENTITY_INSERT dbo.ValueItemList ON
INSERT INTO dbo.ValueItemList (ValueItemListID,DisplayOrder,Description,DefaultValue,DisplayOrderType) VALUES('1','1','País',NULL,NULL)
INSERT INTO dbo.ValueItemList (ValueItemListID,DisplayOrder,Description,DefaultValue,DisplayOrderType) VALUES('2','2','Tipos de Contrato',NULL,NULL)
INSERT INTO dbo.ValueItemList (ValueItemListID,DisplayOrder,Description,DefaultValue,DisplayOrderType) VALUES('3','3','Rango de Precios',NULL,NULL)
INSERT INTO dbo.ValueItemList (ValueItemListID,DisplayOrder,Description,DefaultValue,DisplayOrderType) VALUES('4','4','Términos de Pagos',NULL,NULL)
INSERT INTO dbo.ValueItemList (ValueItemListID,DisplayOrder,Description,DefaultValue,DisplayOrderType) VALUES('5','5','Tipos de OT',NULL,NULL)
INSERT INTO dbo.ValueItemList (ValueItemListID,DisplayOrder,Description,DefaultValue,DisplayOrderType) VALUES('1006','6','Tipos de Acabado',NULL,NULL)
INSERT INTO dbo.ValueItemList (ValueItemListID,DisplayOrder,Description,DefaultValue,DisplayOrderType) VALUES('1007','7','Términos de Ventas',NULL,NULL)
INSERT INTO dbo.ValueItemList (ValueItemListID,DisplayOrder,Description,DefaultValue,DisplayOrderType) VALUES('2006','8','Material',NULL,NULL)
INSERT INTO dbo.ValueItemList (ValueItemListID,DisplayOrder,Description,DefaultValue,DisplayOrderType) VALUES('2007','9','Calidad',NULL,NULL)
INSERT INTO dbo.ValueItemList (ValueItemListID,DisplayOrder,Description,DefaultValue,DisplayOrderType) VALUES('2008','10','Términos de Compras',NULL,NULL)
IF (IDENT_SEED('dbo.ValueItemList') IS NOT NULL )	SET IDENTITY_INSERT dbo.ValueItemList OFF
GO
GO
ALTER TABLE dbo.ValueItemList CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.VATRate
-----------------------------------------------------------
ALTER TABLE dbo.VATRate NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.VATRate
GO

IF (IDENT_SEED('dbo.VATRate') IS NOT NULL )	SET IDENTITY_INSERT dbo.VATRate ON
INSERT INTO dbo.VATRate (VATRateRecordID,VATRateCode,VATRate,Protected,rowversion,DateStart,DateEnd) VALUES('2','1',15,1,NULL,'2020-9-1 0:0:0','2020-9-30 0:0:0')
INSERT INTO dbo.VATRate (VATRateRecordID,VATRateCode,VATRate,Protected,rowversion,DateStart,DateEnd) VALUES('3','0',0,1,NULL,'2020-9-1 0:0:0','2020-12-31 0:0:0')
IF (IDENT_SEED('dbo.VATRate') IS NOT NULL )	SET IDENTITY_INSERT dbo.VATRate OFF
GO
GO
ALTER TABLE dbo.VATRate CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.VATRateCode
-----------------------------------------------------------
ALTER TABLE dbo.VATRateCode NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.VATRateCode
GO

IF (IDENT_SEED('dbo.VATRateCode') IS NOT NULL )	SET IDENTITY_INSERT dbo.VATRateCode ON
IF (IDENT_SEED('dbo.VATRateCode') IS NOT NULL )	SET IDENTITY_INSERT dbo.VATRateCode OFF
GO
GO
ALTER TABLE dbo.VATRateCode CHECK CONSTRAINT ALL
GO


-----------------------------------------------------------
--Insert data into dbo.WoodSpecie
-----------------------------------------------------------
ALTER TABLE dbo.WoodSpecie NOCHECK CONSTRAINT ALL
GO

TRUNCATE TABLE dbo.WoodSpecie
GO

IF (IDENT_SEED('dbo.WoodSpecie') IS NOT NULL )	SET IDENTITY_INSERT dbo.WoodSpecie ON
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1','Cedro Macho','Cedro Macho',500,'13')
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('2','Nanciton','Nanciton',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('3','Teca','Teca',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1002','Hule','Hule',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1003','Laurel','Laurel',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1004','Coffee','Cafe',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1005','Caoba Africana','Caoba Africana',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1006','Quebracho',NULL,NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1007','Roble Macuelizo','Roble Macuelizo',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1008','Santa Maria','Santa Maria',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1009','Almendro','Almendro',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1010','Pino Tratado','Pino Tratado',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1011','Pino','Pino',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1012','Greeheart','Greeheart',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1013','White Oak','Roble Americano',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1014','Carolillo','Carolillo',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1015','Eucalipto','Eucalipto',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1016','IPE','CORTEZ',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1017','N/A','N/A',NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1018','LLAMARADA DEL BOSQUE',NULL,NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1019','Pochote',NULL,NULL,NULL)
INSERT INTO dbo.WoodSpecie (WoodSpecieID,EnglishDescription,SpanishDescription,Density,PriceBracket) VALUES('1020','Frijolillo','Frijolillo',NULL,NULL)
IF (IDENT_SEED('dbo.WoodSpecie') IS NOT NULL )	SET IDENTITY_INSERT dbo.WoodSpecie OFF
GO
GO
ALTER TABLE dbo.WoodSpecie CHECK CONSTRAINT ALL
GO



/******************************************************
  Insert data  End
******************************************************/
GO
/******************************************************
  Foreign keys  Begin
******************************************************/
GO

/******************************************************
  Foreign keys  End
******************************************************/
GO
/******************************************************
  Stored procedures  Begin
******************************************************/
GO
----------------------------------------------------
-- dbo.sp_alterdiagram
----------------------------------------------------
GO
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.sp_alterdiagram') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure dbo.sp_alterdiagram
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO



	CREATE PROCEDURE dbo.sp_alterdiagram
	(
		@diagramname 	sysname,
		@owner_id	int	= null,
		@version 	int,
		@definition 	varbinary(max)
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
	
		declare @theId 			int
		declare @retval 		int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
		declare @ShouldChangeUID	int
	
		if(@diagramname is null)
		begin
			RAISERROR ('Invalid ARG', 16, 1)
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID();	 
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		revert;
	
		select @ShouldChangeUID = 0
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		
		if(@DiagId IS NULL or (@IsDbo = 0 and @theId <> @UIDFound))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);
			return -3
		end
	
		if(@IsDbo <> 0)
		begin
			if(@UIDFound is null or USER_NAME(@UIDFound) is null) -- invalid principal_id
			begin
				select @ShouldChangeUID = 1 ;
			end
		end

		-- update dds data			
		update dbo.sysdiagrams set definition = @definition where diagram_id = @DiagId ;

		-- change owner
		if(@ShouldChangeUID = 1)
			update dbo.sysdiagrams set principal_id = @theId where diagram_id = @DiagId ;

		-- update dds version
		if(@version is not null)
			update dbo.sysdiagrams set version = @version where diagram_id = @DiagId ;

		return 0
	END
	
GO

----------------------------------------------------
-- dbo.sp_creatediagram
----------------------------------------------------
GO
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.sp_creatediagram') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure dbo.sp_creatediagram
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO



	CREATE PROCEDURE dbo.sp_creatediagram
	(
		@diagramname 	sysname,
		@owner_id		int	= null, 	
		@version 		int,
		@definition 	varbinary(max)
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
	
		declare @theId int
		declare @retval int
		declare @IsDbo	int
		declare @userName sysname
		if(@version is null or @diagramname is null)
		begin
			RAISERROR (N'E_INVALIDARG', 16, 1);
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID(); 
		select @IsDbo = IS_MEMBER(N'db_owner');
		revert; 
		
		if @owner_id is null
		begin
			select @owner_id = @theId;
		end
		else
		begin
			if @theId <> @owner_id
			begin
				if @IsDbo = 0
				begin
					RAISERROR (N'E_INVALIDARG', 16, 1);
					return -1
				end
				select @theId = @owner_id
			end
		end
		-- next 2 line only for test, will be removed after define name unique
		if EXISTS(select diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @diagramname)
		begin
			RAISERROR ('The name is already used.', 16, 1);
			return -2
		end
	
		insert into dbo.sysdiagrams(name, principal_id , version, definition)
				VALUES(@diagramname, @theId, @version, @definition) ;
		
		select @retval = @@IDENTITY 
		return @retval
	END
	
GO

----------------------------------------------------
-- dbo.sp_dropdiagram
----------------------------------------------------
GO
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.sp_dropdiagram') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure dbo.sp_dropdiagram
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO



	CREATE PROCEDURE dbo.sp_dropdiagram
	(
		@diagramname 	sysname,
		@owner_id	int	= null
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
		declare @theId 			int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
	
		if(@diagramname is null)
		begin
			RAISERROR ('Invalid value', 16, 1);
			return -1
		end
	
		EXECUTE AS CALLER;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		REVERT; 
		
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)
			return -3
		end
	
		delete from dbo.sysdiagrams where diagram_id = @DiagId;
	
		return 0;
	END
	
GO

----------------------------------------------------
-- dbo.sp_helpdiagramdefinition
----------------------------------------------------
GO
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.sp_helpdiagramdefinition') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure dbo.sp_helpdiagramdefinition
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO



	CREATE PROCEDURE dbo.sp_helpdiagramdefinition
	(
		@diagramname 	sysname,
		@owner_id	int	= null 		
	)
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		set nocount on

		declare @theId 		int
		declare @IsDbo 		int
		declare @DiagId		int
		declare @UIDFound	int
	
		if(@diagramname is null)
		begin
			RAISERROR (N'E_INVALIDARG', 16, 1);
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner');
		if(@owner_id is null)
			select @owner_id = @theId;
		revert; 
	
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname;
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId ))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);
			return -3
		end

		select version, definition FROM dbo.sysdiagrams where diagram_id = @DiagId ; 
		return 0
	END
	
GO

----------------------------------------------------
-- dbo.sp_helpdiagrams
----------------------------------------------------
GO
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.sp_helpdiagrams') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure dbo.sp_helpdiagrams
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO



	CREATE PROCEDURE dbo.sp_helpdiagrams
	(
		@diagramname sysname = NULL,
		@owner_id int = NULL
	)
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		DECLARE @user sysname
		DECLARE @dboLogin bit
		EXECUTE AS CALLER;
			SET @user = USER_NAME();
			SET @dboLogin = CONVERT(bit,IS_MEMBER('db_owner'));
		REVERT;
		SELECT
			[Database] = DB_NAME(),
			[Name] = name,
			[ID] = diagram_id,
			[Owner] = USER_NAME(principal_id),
			[OwnerID] = principal_id
		FROM
			sysdiagrams
		WHERE
			(@dboLogin = 1 OR USER_NAME(principal_id) = @user) AND
			(@diagramname IS NULL OR name = @diagramname) AND
			(@owner_id IS NULL OR principal_id = @owner_id)
		ORDER BY
			4, 5, 1
	END
	
GO

----------------------------------------------------
-- dbo.sp_renamediagram
----------------------------------------------------
GO
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.sp_renamediagram') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure dbo.sp_renamediagram
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO



	CREATE PROCEDURE dbo.sp_renamediagram
	(
		@diagramname 		sysname,
		@owner_id		int	= null,
		@new_diagramname	sysname
	
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
		declare @theId 			int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
		declare @DiagIdTarg		int
		declare @u_name			sysname
		if((@diagramname is null) or (@new_diagramname is null))
		begin
			RAISERROR ('Invalid value', 16, 1);
			return -1
		end
	
		EXECUTE AS CALLER;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		REVERT;
	
		select @u_name = USER_NAME(@owner_id)
	
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)
			return -3
		end
	
		-- if((@u_name is not null) and (@new_diagramname = @diagramname))	-- nothing will change
		--	return 0;
	
		if(@u_name is null)
			select @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @new_diagramname
		else
			select @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @owner_id and name = @new_diagramname
	
		if((@DiagIdTarg is not null) and  @DiagId <> @DiagIdTarg)
		begin
			RAISERROR ('The name is already used.', 16, 1);
			return -2
		end		
	
		if(@u_name is null)
			update dbo.sysdiagrams set [name] = @new_diagramname, principal_id = @theId where diagram_id = @DiagId
		else
			update dbo.sysdiagrams set [name] = @new_diagramname where diagram_id = @DiagId
		return 0
	END
	
GO

----------------------------------------------------
-- dbo.sp_upgraddiagrams
----------------------------------------------------
GO
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.sp_upgraddiagrams') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure dbo.sp_upgraddiagrams
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO



	CREATE PROCEDURE dbo.sp_upgraddiagrams
	AS
	BEGIN
		IF OBJECT_ID(N'dbo.sysdiagrams') IS NOT NULL
			return 0;
	
		CREATE TABLE dbo.sysdiagrams
		(
			name sysname NOT NULL,
			principal_id int NOT NULL,	-- we may change it to varbinary(85)
			diagram_id int PRIMARY KEY IDENTITY,
			version int,
	
			definition varbinary(max)
			CONSTRAINT UK_principal_name UNIQUE
			(
				principal_id,
				name
			)
		);


		/* Add this if we need to have some form of extended properties for diagrams */
		/*
		IF OBJECT_ID(N'dbo.sysdiagram_properties') IS NULL
		BEGIN
			CREATE TABLE dbo.sysdiagram_properties
			(
				diagram_id int,
				name sysname,
				value varbinary(max) NOT NULL
			)
		END
		*/

		IF OBJECT_ID(N'dbo.dtproperties') IS NOT NULL
		begin
			insert into dbo.sysdiagrams
			(
				[name],
				[principal_id],
				[version],
				[definition]
			)
			select	 
				convert(sysname, dgnm.[uvalue]),
				DATABASE_PRINCIPAL_ID(N'dbo'),			-- will change to the sid of sa
				0,							-- zero for old format, dgdef.[version],
				dgdef.[lvalue]
			from dbo.[dtproperties] dgnm
				inner join dbo.[dtproperties] dggd on dggd.[property] = 'DtgSchemaGUID' and dggd.[objectid] = dgnm.[objectid]	
				inner join dbo.[dtproperties] dgdef on dgdef.[property] = 'DtgSchemaDATA' and dgdef.[objectid] = dgnm.[objectid]
				
			where dgnm.[property] = 'DtgSchemaNAME' and dggd.[uvalue] like N'_EA3E6268-D998-11CE-9454-00AA00A3F36E_' 
			return 2;
		end
		return 1;
	END
	
GO


/******************************************************
  Stored procedures  End
******************************************************/
GO
/******************************************************
  User functions  Begin
******************************************************/
GO
----------------------------------------------------
-- dbo.fn_diagramobjects
----------------------------------------------------
GO
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.fn_diagramobjects') and xtype in (N'FN', N'IF', N'TF')) drop function dbo.fn_diagramobjects
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO



	CREATE FUNCTION dbo.fn_diagramobjects() 
	RETURNS int
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		declare @id_upgraddiagrams		int
		declare @id_sysdiagrams			int
		declare @id_helpdiagrams		int
		declare @id_helpdiagramdefinition	int
		declare @id_creatediagram	int
		declare @id_renamediagram	int
		declare @id_alterdiagram 	int 
		declare @id_dropdiagram		int
		declare @InstalledObjects	int

		select @InstalledObjects = 0

		select 	@id_upgraddiagrams = object_id(N'dbo.sp_upgraddiagrams'),
			@id_sysdiagrams = object_id(N'dbo.sysdiagrams'),
			@id_helpdiagrams = object_id(N'dbo.sp_helpdiagrams'),
			@id_helpdiagramdefinition = object_id(N'dbo.sp_helpdiagramdefinition'),
			@id_creatediagram = object_id(N'dbo.sp_creatediagram'),
			@id_renamediagram = object_id(N'dbo.sp_renamediagram'),
			@id_alterdiagram = object_id(N'dbo.sp_alterdiagram'), 
			@id_dropdiagram = object_id(N'dbo.sp_dropdiagram')

		if @id_upgraddiagrams is not null
			select @InstalledObjects = @InstalledObjects + 1
		if @id_sysdiagrams is not null
			select @InstalledObjects = @InstalledObjects + 2
		if @id_helpdiagrams is not null
			select @InstalledObjects = @InstalledObjects + 4
		if @id_helpdiagramdefinition is not null
			select @InstalledObjects = @InstalledObjects + 8
		if @id_creatediagram is not null
			select @InstalledObjects = @InstalledObjects + 16
		if @id_renamediagram is not null
			select @InstalledObjects = @InstalledObjects + 32
		if @id_alterdiagram  is not null
			select @InstalledObjects = @InstalledObjects + 64
		if @id_dropdiagram is not null
			select @InstalledObjects = @InstalledObjects + 128
		
		return @InstalledObjects 
	END
	
GO


/******************************************************
  User functions  End
******************************************************/
GO
/******************************************************
  Views  Begin
******************************************************/
GO
----------------------------------------------------
-- dbo.vwCustomerOrderValueSum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwCustomerOrderValueSum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwCustomerOrderValueSum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

create view vwCustomerOrderValueSum AS
SELECT
CU.CustomerID,
SUM(ISNULL(SOI.UnitPrice,0)* ISNULL(SOI.Quantity,0)) AS TOTALCUSTOMERORDERVALUE

from Customer CU
Left join SalesOrder SO on SO.CustomerID=CU.CustomerID
LEFT JOIN SalesOrderItem SOI ON SOI.SalesOrderID=SO.SalesOrderID
GROUP BY CU.CustomerID

GO

----------------------------------------------------
-- dbo.vwInvoiceSum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwInvoiceSum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwInvoiceSum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


create View vwInvoiceSum as
select
INV.InvoiceID,
inv.SalesOrderID, 
INVITEM.InvoiceItemID,
SUM(IsNull(INVITEM.Quantity*INVITEM.UnitPrice,0)) as SumInvoiceItem
from 
InvoiceItem INVITEM
LEFT JOIN Invoice INV ON  INV.InvoiceID=INVITEM.InvoiceID
GROUP BY INV.InvoiceID,INV.SalesOrderID,INVITEM.InvoiceItemID

GO

----------------------------------------------------
-- dbo.vwMaterialRequirementPicking
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwMaterialRequirementPicking') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwMaterialRequirementPicking
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE view [dbo].[vwMaterialRequirementPicking]
as

select 

MR.MaterialRequirementID,
MR.StockCode,
MR.Description,
MR.Quantity,
isnull(MR.PickedQty,0) as 'PickedQty',
MR.ObjectID,
MR.UoM,
MR.AreaID,
MR.SupplierStockCode,
MR.Comments,
MR.MaterialRequirementType,
SI.Category,
SI.PartNo,
SI.StockItemID,
SI.StockCode AS 'STOCKITEMCODE',
SI.Description AS 'SIDESCRIPTION',
SI.StdCost,
WO.WorkOrderID,
WO.WorkOrderNo,
WO.Description as 'WODESCRIPTION',
WO.PlannedDeliverDate,
WO.PlannedStartDate,
SO.OrderNo,
SO.ProjectName,
CU.CompanyName,
isnull(MR.Quantity,0)-isnull(PickedQty,0) AS 'OSQty'

from MaterialRequirement MR
LEFT JOIN StockItem SI ON SI.StockItemID=MR.StockItemID 
LEFT JOIN ProductFurniture PF ON PF.ProductFurnitureID=MR.ObjectID
LEFT JOIN WorkOrder WO ON WO.ProductID=MR.ObjectID
LEFT JOIN SalesOrder SO ON SO.SalesOrderID=WO.SalesOrderID
LEFT JOIN Customer CU ON CU.CustomerID = SO.CustomerID
WHERE MR.MaterialRequirementType IN (2,4)

GO

----------------------------------------------------
-- dbo.vwCustomerPurchaseOrdersSum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwCustomerPurchaseOrdersSum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwCustomerPurchaseOrdersSum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

create View vwCustomerPurchaseOrdersSum as
select
cpo.CustomerPurchaseOrderID,
cpo.SalesOrderID, 
SUM(IsNull(cpo.OrderValue,0)) as SumCustomerOrderNetValue
from 
CustomerPurchaseOrder CPO
group by CPO.CustomerPurchaseOrderID,cpo.SalesOrderID

GO

----------------------------------------------------
-- dbo.vwSalesOrderItemWOMilestoneEngineeringSum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwSalesOrderItemWOMilestoneEngineeringSum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwSalesOrderItemWOMilestoneEngineeringSum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


Create View vwSalesOrderItemWOMilestoneEngineeringSum
as
select SalesOrderItemID, MilestoneENUM, Min(Status) as MinStatus, Max(Status) as MaxStatus, Max(TargetDate) as MaxTargetDate, Max(ActualDate) as ActualDate from 
WorkOrderMilestoneStatus WOMS
Inner Join WorkOrder WO on WO.WorkOrderID = WOMS.WorkOrderID
Where MilestoneEnum = 1
Group By SalesOrderItemID, MilestoneENUM


GO


----------------------------------------------------
-- dbo.vwInvoiceInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwInvoiceInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwInvoiceInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


Create View vwInvoiceInfo as
select 
I.InvoiceID,
I.InvoiceNo,
I.InvoiceDate,
I.NetValue,
I.InvoiceStatus,


SO.OrderNo,
SO.ProjectName,
SO.FinishDate,
SO.DueTime,

C.CompanyName

from Invoice I
Inner Join SalesOrder SO on SO.SalesOrderID = I.SalesOrderID
Inner Join Customer C on C.CustomerID = SO.CustomerID



GO

----------------------------------------------------
-- dbo.vwSalesOrderItemWOMilestonePackedSum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwSalesOrderItemWOMilestonePackedSum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwSalesOrderItemWOMilestonePackedSum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


Create View vwSalesOrderItemWOMilestonePackedSum
as
select SalesOrderItemID, MilestoneENUM, Min(Status) as MinStatus, Max(Status) as MaxStatus, Max(TargetDate) as MaxTargetDate, Max(ActualDate) as ActualDate from 
WorkOrderMilestoneStatus WOMS
Inner Join WorkOrder WO on WO.WorkOrderID = WOMS.WorkOrderID
Where MilestoneEnum = 9
Group By SalesOrderItemID, MilestoneENUM


GO

----------------------------------------------------
-- dbo.vwSalesOrderItemProgressInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwSalesOrderItemProgressInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwSalesOrderItemProgressInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE View [dbo].[vwSalesOrderItemProgressInfo] as

select
SOI.SalesOrderItemID,
SOI.Quantity,
SOI.UnitPrice,
SOI.QtyInvoiced,
(IsNull(SOI.Quantity,0) - IsNull(SOI.QtyInvoiced,0)) * IsNull(SOI.UnitPrice,0) as OSInvValue,

SO.SalesOrderID,
SO.OrderNo,
SO.ProjectName,
SO.FinishDate,
SO.DueTime,
C.CompanyName,

WOPAK.MinStatus as PackingStatus,

WOEng.MinStatus as EngineeringStatus
 
from 
SalesOrderItem SOI
Inner Join SalesOrder SO on SO.SalesOrderID = SOI.SalesOrderID
Inner Join Customer C on C.CustomerID = SO.CustomerID
Left Join vwSalesOrderItemWOMilestonePackedSum WOPAK on WOPAK.SalesOrderItemID = SOI.SalesOrderItemID
Left Join vwSalesOrderItemWOMilestoneEngineeringSum WOENG on WOENG.SalesOrderItemID = SOI.SalesOrderItemID

GO

----------------------------------------------------
-- dbo.vwInvoiceInfoPredictedEngineering
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwInvoiceInfoPredictedEngineering') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwInvoiceInfoPredictedEngineering
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO




Create View vwInvoiceInfoPredictedEngineering as
select 
SalesOrderID as InvoiceID,
'Predicted' as InvoiceNo,
Max(FinishDate) as InvoiceDate,
Sum(OSInvValue) as NetValue,
-1 as InvoiceStatus,

Max(OrderNo) as OrderNo,
Max(ProjectName) as ProjectName,
Max(FinishDate) as FinishDate,
Max(DueTime) as DueTime,

Max(CompanyName) as CompanyName

from  vwSalesOrderItemProgressInfo
Where EngineeringStatus = 3 And IsNull(PackingStatus,0) <> 3
Group By SalesOrderID


GO





----------------------------------------------------
-- dbo.vwInvoiceInfoPredictedPacked
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwInvoiceInfoPredictedPacked') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwInvoiceInfoPredictedPacked
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


Create View vwInvoiceInfoPredictedPacked as
select 
SalesOrderID as InvoiceID,
'Predicted' as InvoiceNo,
Max(FinishDate) as InvoiceDate,
Sum(OSInvValue) as NetValue,
-1 as InvoiceStatus,

Max(OrderNo) as OrderNo,
Max(ProjectName) as ProjectName,
Max(FinishDate) as FinishDate,
Max(DueTime) as DueTime,

Max(CompanyName) as CompanyName

from  vwSalesOrderItemProgressInfo
Where PackingStatus = 3
Group By SalesOrderID


GO

----------------------------------------------------
-- dbo.vwInvoiceInfoPredictedPending
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwInvoiceInfoPredictedPending') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwInvoiceInfoPredictedPending
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


Create View vwInvoiceInfoPredictedPending as
select 
SalesOrderID as InvoiceID,
'Predicted' as InvoiceNo,
Max(FinishDate) as InvoiceDate,
Sum(OSInvValue) as NetValue,
-1 as InvoiceStatus,

Max(OrderNo) as OrderNo,
Max(ProjectName) as ProjectName,
Max(FinishDate) as FinishDate,
Max(DueTime) as DueTime,

Max(CompanyName) as CompanyName

from  vwSalesOrderItemProgressInfo
Where IsNull(EngineeringStatus,0) <> 3 and IsNull(PackingStatus,0) <> 3
Group By SalesOrderID


GO



----------------------------------------------------
-- dbo.vwPODeliveryInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwPODeliveryInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwPODeliveryInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


CREATE VIEW [dbo].[vwPODeliveryInfo]
as

select 
POD.PODeliveryID,
POD.GRNumber,
POD.ReceivedDate,
POD.Comment,
POD.DateCreated,
POD.PODeliveryValue,
POD.Status,
PO.PurchaseOrderID,
PO.PurchaseCategory,
PO.PONum,
PO.RequiredDate,
PO.DeliveryAddress1,
SP.SupplierID,
SP.CompanyName,
SP.AccountCode,
SP.TelNo,
SP.MainAddress1

from 
PODelivery POD
LEFT JOIN PurchaseOrder PO ON PO.PurchaseOrderID=POD.PurchaseOrderID
LEFT JOIN Supplier SP ON SP.SupplierID=PO.SupplierID



GO

----------------------------------------------------
-- dbo.vwPODeliveryItemInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwPODeliveryItemInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwPODeliveryItemInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE VIEW vwPODeliveryItemInfo
AS

select  
PODI.PODeliveryItemID,
PODI.QtyReceived,
POI.Description,
POI.PartNo,
POI.StockCode,
poi.QtyRequired,
POI.UnitPrice,
POD.GRNumber,
POD.DateCreated,
SOP.JobNo,
PO.PONum

from PODeliveryItem PODI
INNER JOIN PurchaseOrderItemAllocation POIA ON POIA.PurchaseOrderItemAllocationID=PODI.POItemAllocationID
INNER JOIN PurchaseOrderItem POI ON POI.PurchaseOrderItemID= POIA.PurchaseOrderItemID
INNER JOIN PODelivery POD ON POD.PODeliveryID=PODI.PODeliveryID
INNER JOIN PurchaseOrder PO ON PO.PurchaseOrderID=POI.PurchaseOrderID
LEFT JOIN SalesOrderPhase SOP ON SOP.SalesOrderPhaseID=POIA.CallOffID

GO

----------------------------------------------------
-- dbo.vwPurchaseOrder
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwPurchaseOrder') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwPurchaseOrder
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


CREATE View [dbo].[vwPurchaseOrder]    AS
SELECT
PO.PurchaseOrderID,
PONum,
SupplierContactTel,
Category,
SubmissionDate,
Status,
DelStatus,
Instructions,
Comments,
BuyerID,
AcknowledgementNo,
OrderType,
Carriage,
VatRate,
RequiredDate,
PurchaseCategory,
CoCOrder,
CoCType,
PriceGross,
TotalPrice,
DeliveryAddress1,
DeliveryAddress2,
DeliveryAddress3,
DeliveryTown,
DeliveryCounty,
DeliveryPostCode,
SupplierRef,
LastStatusChangeDate,
PaymentStatus,
TotalNetValue,
Concat(EM.FirstName,' ', EM.LastName) AS BuyerName,
Concat (SC.FirstName,' ', SC.Lastname) as SupplierContactName,
CompanyName
FROM PurchaseORder PO
Left Join Supplier S ON PO.SupplierID = S.SupplierID
LEFT JOIN SupplierContact SC ON SC.SupplierID=S.SupplierID
LEFT JOIN Employee EM ON EM.EmployeeID=PO.BuyerID

GO

----------------------------------------------------
-- dbo.vwPurchaseOrderItemAllocationInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwPurchaseOrderItemAllocationInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwPurchaseOrderItemAllocationInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


CREATE view [dbo].[vwPurchaseOrderItemAllocationInfo]
as

select 
POIA.PurchaseOrderItemAllocationID,
POIA.Quantity,
POIA.ReceivedQty,
POI.PurchaseOrderItemID,
POI.PurchaseOrderID,
POI.Status,
POI.Description,
POI.UnitPrice,
POI.QtyRequired,
SI.StockItemID,
SI.StockCode,
SI.Description AS STOCKDESCRIPTION,
SI.PartNo,
SI.Length,
SI.Width,
SI.Thickness,
SI.Category,
po.PONum,
PO.RequiredDate,
PO.SubmissionDate,
po.Category as PO_CATEGORY,
S.CompanyName,
SOP.JobNo

from PurchaseOrderItemAllocation as POIA
LEFT JOIN PurchaseOrderItem POI ON POI.PurchaseOrderItemID=POIA.PurchaseOrderItemID

LEFT JOIN StockItem SI ON SI.StockItemID=POI.StockItemID
left join PurchaseOrder PO on PO.PurchaseOrderID=POI.PurchaseOrderID 
Left join Supplier S on S.SupplierID=Po.SupplierID
left join SalesOrderPhase SOP on SOP.SalesOrderPhaseID =POIA.CallOffID

GO

----------------------------------------------------
-- dbo.vwSalesOrderDespatchCompleteSum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwSalesOrderDespatchCompleteSum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwSalesOrderDespatchCompleteSum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


Create View vwSalesOrderDespatchCompleteSum as
select SalesOrderID, Count(WorkOrderMilestoneStatusID) as DespatchCompleteQty
from WorkOrderMilestoneStatus WOMS 
Inner Join WorkOrder WO on WO.WorkOrderID =  WOMS.WorkOrderID
Where MilestoneEnum = 10 And Status = 3 and ActualDate is not null
Group By SalesOrderID


GO

----------------------------------------------------
-- dbo.vwSalesOrderEngineeringCompleteSum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwSalesOrderEngineeringCompleteSum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwSalesOrderEngineeringCompleteSum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

Create View vwSalesOrderEngineeringCompleteSum as
select SalesOrderID, Count(WorkOrderMilestoneStatusID) as EngineeringCompleteQty
from WorkOrderMilestoneStatus WOMS 
Inner Join WorkOrder WO on WO.WorkOrderID =  WOMS.WorkOrderID
Where MilestoneEnum = 1 And Status = 3 and ActualDate is not null
Group By SalesOrderID


GO

----------------------------------------------------
-- dbo.vwSalesOrderInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwSalesOrderInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwSalesOrderInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


CREATE view vwSalesOrderInfo
as
SELECT        SO.SalesOrderID, SO.OrderNo, SO.ContractManagerID, SO.ProjectName, SO.OrderStatusENUM, SO.OrderTypeID, SO.DateEntered, SO.FinishDate, SO.DueTime, Cust.CompanyName, Cust.SalesAreaID, Cust.AccountRef, 
                         SO.ShippingCost,  CONCAT(Emp.FirstName, ' ', Emp.LastName) AS FirstName
FROM            dbo.SalesOrder AS SO LEFT OUTER JOIN
                         dbo.Customer AS Cust ON Cust.CustomerID = SO.CustomerID LEFT OUTER JOIN
                         dbo.Employee AS Emp ON SO.ContractManagerID = Emp.EmployeeID



GO




----------------------------------------------------
-- dbo.vwSalesOrderPhaseInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwSalesOrderPhaseInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwSalesOrderPhaseInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


CREATE VIEW [dbo].[vwSalesOrderPhaseInfo]
AS
SELECT
	SOP.SalesOrderPhaseID,
	SOP.DateRequired,
	SOP.QuantityItems,

	SOP.TotalPrice,
	SOP.PhaseNumber,
	SOP.DespatchStatus,
                         
	SOP.InvoiceStatus,
	SOP.ProductionStatus,
	SOP.MatReqStatus,
    
	SOP.DateCreated,
  	SOP.DateCommitted,
   	SOP.CommittedBy,
   	SOP.JobNo As SOPJobNo,
	SOP.PhaseRef,
 
	SO.SalesOrderID,
	SO.OrderNo,
	SO.ContractManagerID,

	SO.DateEntered,

	SO.OrderStatusENUM,
   	SO.OrderTypeID,
	
  	SO.ProjectName,
	
  
	C.CompanyName
 
FROM
	SalesOrderPhase SOP 
	LEFT JOIN SalesOrder SO ON SO.SalesOrderID = SOP.SalesOrderID 
	LEFT JOIN Customer C ON C.CustomerID = SO.CustomerID 



GO
----------------------------------------------------
-- dbo.vwWorkOrderMatReqOtherSum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwWorkOrderMatReqOtherSum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwWorkOrderMatReqOtherSum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


Create View vwWorkOrderMatReqOtherSum as
select 
WO.WorkOrderID,
Count(MR.MaterialRequirementID) as QtyMatReqsOther,
SUM(Case When IsNull(MR.Quantity,0)-IsNull(MR.PickedQty,0) > 0 or IsNull(MR.PickedQty,0) = 0 Then 1 Else 0 End) as QtyMatReqsOtherUnpicked
from 
MaterialRequirement MR
Inner Join ProductFurniture PF on PF.ProductFurnitureID = MR.ObjectID And MR.ObjectType = 1
Inner Join WorkOrder WO on WO.ProductID = PF.ProductFurnitureID And WO.ProductTypeID = 1
Left Join StockItem SI on SI.StockItemID = MR.StockItemID
Where MaterialRequirementType = 2
Group By WO.WorkOrderID


GO


----------------------------------------------------
-- dbo.vwSalesOrderWorkOrderSum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwSalesOrderWorkOrderSum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwSalesOrderWorkOrderSum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


Create view vwSalesOrderWorkOrderSum as
Select
SOI.SalesOrderID,
Count(WO.WorkOrderID) as QtyWOs
From WorkOrder WO
Inner Join SalesOrderItem SOI on SOI.SalesOrderItemID = WO.SalesOrderItemID
Group By SOI.SalesOrderID


GO

----------------------------------------------------
-- dbo.vwSISTockItemLocationSUM
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwSISTockItemLocationSUM') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwSISTockItemLocationSUM
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

create view vwSISTockItemLocationSUM
as

select StockItemID, SUM(qty) as qty from StockItemLocation 
group by StockItemID

GO

----------------------------------------------------
-- dbo.vwStockItemMaterialRequirementSum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwStockItemMaterialRequirementSum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwStockItemMaterialRequirementSum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

                                                                  Create View vwStockItemMaterialRequirementSum as
select 
StockItemID,
Sum(Quantity - Isnull(PickedQty,0)) as OSQty
from MaterialRequirement
Group By StockItemID

GO

----------------------------------------------------
-- dbo.vwStockItemPurchaseOrderSum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwStockItemPurchaseOrderSum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwStockItemPurchaseOrderSum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


Create View vwStockItemPurchaseOrderSum as
select 
SI.StockItemID,
Sum(POIA.Quantity - Isnull(POIA.ReceivedQty,0)) as POSQty
from PurchaseOrderItemAllocation POIA
left join PurchaseOrderItem POI on POI.PurchaseOrderItemID=POIA.PurchaseOrderItemID
left join StockItem SI on SI.StockItemID=POI.StockItemID
Group By SI.StockItemID


GO

----------------------------------------------------
-- dbo.vwStockItemInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwStockItemInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwStockItemInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


CREATE view [dbo].[vwStockItemInfo]
as

SELECT        
SI.StockItemID, 
SI.StockCode,
SI.PartNo,
si.ASISID,
SI.Category, 
SI.ItemType, 
SI.Species, 
SI.Colour, 
SI.Length, 
SI.Width, 
SI.Thickness, 
SI.DefaultSupplier,
SI.Description, 
StdCost,
sil.qty,
SIMR.OSQty,
SIPOS.POSQty,
SP.CompanyName
-- On Order Qty
FROM dbo.StockItem AS SI
left join vwSIStockItemLocationSUM as SIL ON SIL.StockItemID = si.StockItemID 
left join vwStockItemMaterialRequirementSum SIMR on SIMR.StockItemID = SI.StockItemID
left join vwStockItemPurchaseOrderSum SIPOS ON SIPOS.StockItemID=Si.StockItemID
left join Supplier SP on SP.SupplierID=SI.DefaultSupplier


GO



----------------------------------------------------
-- dbo.vwStockItemTransactionLogInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwStockItemTransactionLogInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwStockItemTransactionLogInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


CREATE view [dbo].[vwStockItemTransactionLogInfo]
as

SELECT        
SITL.StockItemTransactionLogID, 
SITL.TransactionType, 
SITL.TransactionDate, 
SITL.RefObjectType, 
SITL.RefObjectID, 
SITL.TranValue, 
SITL.PrevValue, 
SITL.NewValue, 
SITL.TransactionValuation, 
SITL.ReferenceNo,
SITL.StockValuation, 
SITL.TransactionValuationDollar,
SI.StockItemID, 
SI.Category, 
SI.ItemType, 
SI.StockCode, 
SI.Description, 
si.StdCost,
MR.AreaID,
MR.UoM,
UL.UserName, 
ST.Description AS StockTakeDescription,
WO.WorkOrderNo,
WO.Description AS WODESCRIPTION,
SO.OrderNo,
SO.ProjectName,
CU.CompanyName

FROM dbo.StockItemTransactionLog AS SITL 
INNER JOIN dbo.UserList AS UL ON SITL.UserID = UL.UserID 
INNER JOIN dbo.StockItemLocation AS SIL ON SITL.ObjectID = SIL.StockItemLocationID 
INNER JOIN dbo.StockItem AS SI ON SIL.StockItemID = SI.StockItemID 
LEFT JOIN dbo.StockTake AS ST ON ST.StockTakeID = SITL.RefObjectID AND SITL.RefObjectType = 4
LEFT JOIN dbo.MaterialRequirement AS MR ON MR.MaterialRequirementID = SITL.RefObjectID AND SITL.RefObjectType = 6
LEFT JOIN ProductFurniture PF ON PF.ProductFurnitureID=MR.ObjectID
LEFT JOIN WorkOrder WO ON WO.ProductID=MR.ObjectID
LEFT JOIN SalesOrder SO on SO.SalesOrderID=WO.SalesOrderID
LEFT JOIN Customer CU ON CU.CustomerID = SO.CustomerID




GO

----------------------------------------------------
-- dbo.vwTimeSheetEntryInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwTimeSheetEntryInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwTimeSheetEntryInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE view [dbo].[vwTimeSheetEntryInfo]
as


SELECT        
TS.TimeSheetEntryID, 
TS.TimeSheetEntryTypeID,
TS.EmployeeID, 
TS.WorkOrderID, 
TS.StartTime, 
TS.EndTime, 
TS.Note, 
TS.WorkcentreID,
TS.OverTimeMinutes, 
WO.WorkOrderNo, 
WO.Description,
SO.ProjectName,
C.CompanyName,
EROP.StandardRate
FROM dbo.TimeSheetEntry AS TS 
LEFT OUTER JOIN dbo.WorkOrder AS WO ON WO.WorkOrderID = TS.WorkOrderID
Left Join SalesOrderItem SOI on SOI.SalesOrderItemID = WO.SalesOrderItemID
Left Join SalesOrder SO on SO.SalesOrderID = SOI.SalesOrderID
Left Join Customer C on C.CustomerId = SO.CustomerID
LEFT JOIN Employee E ON E.EmployeeID=TS.EmployeeID
left join EmployeeRateOfPay EROP on EROP.EmployeeID=E.EmployeeID


GO

----------------------------------------------------
-- dbo.vwTotalValueSUMPODeliveryItem
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwTotalValueSUMPODeliveryItem') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwTotalValueSUMPODeliveryItem
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE view vwTotalValueSUMPODeliveryItem
AS

select 
cast (
SUM( ISNULL(podi.qtyreceived,0) * ISNULL(unitprice,0) ) as decimal (9,4)) AS 'POTotalValue',
POD.PODeliveryID
from PODeliveryItem PODI
inner JOIN PODelivery POD ON POD.PODeliveryID=PODI.PODeliveryID
inner join PurchaseOrderItemAllocation POIA ON POIA.PurchaseOrderItemAllocationID=PODI.POItemAllocationID
INNER JOIN PurchaseOrderItem POI ON POI.PurchaseOrderItemID=POIA.PurchaseOrderItemID
GROUP BY POD.PODeliveryID

GO

----------------------------------------------------
-- dbo.vwUserLocksNet
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwUserLocksNet') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwUserLocksNet
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO



CREATE VIEW dbo.vwUserLocksNet
AS
SELECT CurrentLock.CurrentLockID, CurrentLock.ConcurrentUserID, 
    CurrentLock.DBTable, CurrentLock.PrimaryKeyID, CurrentLock.PrimaryKey, CurrentLock.TimeLocked, CurrentLock.Scope, CurrentLock.DBConnID,
    UserList.UserName as 'UserName' , CurrentUserLog.UserID, 
    CurrentUserLog.DateLoggedOn As 'LoggedOn', CurrentUserLog.DateLoggedOff As 'LoggedOff',
    dbo.CurrentUserLog.AppName As 'AppName',
    dbo.CurrentUserLog.AppVersionNo AS 'AppVersion',
    dbo.CurrentUserLog.HostPC,
    dbo.CurrentUserLog.NTUserName As 'WindowsLogon',
    dbo.UserList.DateLastLoggedOn

FROM dbo.CurrentUserLog 
INNER JOIN  dbo.CurrentLock ON dbo.CurrentUserLog.ConcurrentUserID = dbo.CurrentLock.ConcurrentUserID
INNER JOIN dbo.UserList ON dbo.CurrentUserLog.UserID = dbo.UserList.UserID




GO

----------------------------------------------------
-- dbo.vwUsersLoggedOnNet
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwUsersLoggedOnNet') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwUsersLoggedOnNet
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO





CREATE VIEW dbo.vwUsersLoggedOnNet
AS
SELECT dbo.UserList.UserID, dbo.UserList.UserName, 
    dbo.UserList.Abbreviation, dbo.UserList.DateLastLoggedOn, 
    dbo.CurrentUserLog.DateLoggedOn As 'Logged On', 
    dbo.CurrentUserLog.DateLoggedOff As 'Logged Off', 
    dbo.CurrentUserLog.ConCurrentUserID, 
    dbo.CurrentUserLog.SQLSPID As 'SQL SP ID',  
    COUNT(dbo.CurrentLock.ConcurrentUserID) AS NumLocks, 
     dbo.CurrentUserLog.AppName As 'App Name',
    dbo.CurrentUserLog.AppVersionNo AS 'App Version',
    dbo.CurrentUserLog.HostPC,
    dbo.CurrentUserLog.NTUserName As 'Windows Logon'

FROM dbo.UserList INNER JOIN
    dbo.CurrentUserLog ON 
    dbo.UserList.UserID = dbo.CurrentUserLog.UserID LEFT OUTER JOIN
    dbo.CurrentLock ON 
    dbo.CurrentUserLog.ConCurrentUserID = dbo.CurrentLock.ConCurrentUserID
GROUP BY dbo.UserList.UserID, dbo.UserList.UserName, 
    dbo.UserList.Abbreviation, dbo.UserList.DateLastLoggedOn, 
    dbo.CurrentUserLog.DateLoggedOn ,
    dbo.CurrentUserLog.DateLoggedOff ,
    dbo.CurrentUserLog.ConCurrentUserID, 
    dbo.CurrentUserLog.SQLSPID , 
    dbo.CurrentUserLog.AppName ,
    dbo.CurrentUserLog.AppVersionNo ,
    dbo.CurrentUserLog.HostPC,
    dbo.CurrentUserLog.NTUserName

HAVING (dbo.CurrentUserLog.DateLoggedOff IS NULL and dbo.CurrentUserLog.DateLoggedOn is not null)




GO

----------------------------------------------------
-- dbo.vwWoodMatReqInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwWoodMatReqInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwWoodMatReqInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE VIEW [dbo].[vwWoodMatReqInfo]
as

select 
MR.MaterialRequirementID,
MR.Description,
MR.UnitPiece,
MR.PiecesPerComponent,
MR.NetLenght,
MR.NetWidth,
MR.NetThickness,
MR.QualityType,
MR.WoodSpecie,
PF.ProductFurnitureID,
WO.Description 'WODescription',
WO.PlannedStartDate,
WO.WorkOrderNo,
Wo.Quantity,
SO.ProjectName,
SO.SalesOrderID,
CU.CompanyName

from MaterialRequirement as MR 
LEFT JOIN PRODUCTFURNITURE PF ON PF.ProductFurnitureID = MR.ObjectID
LEFT JOIN WorkOrder WO ON WO.ProductID=PF.ProductFurnitureID
LEFT JOIN SalesOrder SO ON SO.SalesOrderID=WO.SalesOrderID
LEFT JOIN Customer CU ON CU.CustomerID = SO.CustomerID
WHERE MaterialRequirementType=1


GO

----------------------------------------------------
-- dbo.vwWorkOrderInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwWorkOrderInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwWorkOrderInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE view vwWorkOrderInfo
as

SELECT        WO.WorkOrderID, WO.SalesOrderItemWOIndex,WO.WorkOrderNo, WO.ProductTypeID, WO.Quantity, WO.Description, WO.PlannedStartDate,Wo.PlannedDeliverDate, SO.ProjectName, SO.OrderTypeID, SO.OrderStatusENUM, SO.OrderNo, SO.CustomerRef, SO.ContractManagerID, 
                         SO.BusinessSectorID, C.CompanyName, C.SalesAreaID, WO.UnitPrice, CONCAT(Emp.FirstName, ' ', Emp.LastName) AS EmployeeName, SO.DueTime, SO.FinishDate, WO.WorkOrderType, WO.EmployeeID
FROM            dbo.WorkOrder AS WO INNER JOIN
                         dbo.SalesOrderItem AS SOI ON SOI.SalesOrderItemID = WO.SalesOrderItemID INNER JOIN
                         dbo.SalesOrder AS SO ON SO.SalesOrderID = WO.SalesOrderID LEFT OUTER JOIN
                         dbo.Customer AS C ON C.CustomerID = SO.CustomerID LEFT OUTER JOIN
                         dbo.Employee AS Emp ON Emp.EmployeeID = WO.EmployeeID
WHERE        (ISNULL(WO.isInternal, 0) = 0)

GO

----------------------------------------------------
-- dbo.vwWorkOrderInternalInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwWorkOrderInternalInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwWorkOrderInternalInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


CREATE view vwWorkOrderInternalInfo
as

SELECT        WO.WorkOrderID, WO.WorkOrderNo, WO.ProductTypeID, WO.Quantity, WO.Description, WO.PlannedStartDate, WO.PlannedDeliverDate, CONCAT(Emp.FirstName, ' ', Emp.LastName)  AS EmployeeName, 
                         WO.WorkOrderType,wo.UnitPrice,Emp.EmployeeID
FROM            dbo.WorkOrder AS WO INNER JOIN
                         dbo.Employee AS Emp ON Emp.EmployeeID = WO.EmployeeID
Where IsInternal = 1

GO



----------------------------------------------------
-- dbo.vwWorkOrderTracking
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwWorkOrderTracking') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwWorkOrderTracking
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

Create view vwWorkOrderTracking
as
SELECT
WO.WorkOrderID, 
WO.WorkOrderNo, 
WO.ProductTypeID, 
WO.Quantity, 
WO.Description, 
WO.PlannedStartDate,
Wo.PlannedDeliverDate, 
WO.UnitPrice,
WO.WorkOrderType, 
WO.EmployeeID,

SO.ProjectName, 
SO.OrderTypeID, 
SO.OrderStatusENUM, 
SO.OrderNo, 
SO.CustomerRef, 
SO.ContractManagerID, 
SO.BusinessSectorID, 
SO.DueTime, 
SO.FinishDate,

C.CompanyName, 
C.SalesAreaID, 
 
CONCAT(Emp.FirstName, ' ', Emp.LastName) AS EmployeeName  

FROM            
dbo.WorkOrder AS WO 
Left JOIN dbo.SalesOrderItem AS SOI ON SOI.SalesOrderItemID = WO.SalesOrderItemID 
Left JOIN dbo.SalesOrder AS SO ON SO.SalesOrderID = WO.SalesOrderID 
LEFT JOIN dbo.Customer AS C ON C.CustomerID = SO.CustomerID 
LEFT JOIN dbo.Employee AS Emp ON Emp.EmployeeID = WO.EmployeeID


GO


/******************************************************
  Views  End
******************************************************/
GO
/******************************************************
  Indexes  Begin
******************************************************/
GO
CREATE INDEX IX_ApplicationActivity ON dbo.ApplicationActivity
( ActivityCode )
WITH( FILLFACTOR = 90)

GO
CREATE INDEX IX_CurrentLock_CheckLock ON dbo.CurrentLock
( DBConnID,DBTable,PrimaryKeyID,Scope )
WITH( FILLFACTOR = 50)

GO
CREATE INDEX IX_CurrentUserLog_UserID ON dbo.CurrentUserLog
( UserID )
WITH( FILLFACTOR = 90)

GO
CREATE INDEX IX_DisplayOrder ON dbo.LookUpTable
( DisplayOrder )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_EmailStore_Filename ON dbo.EmailStore
( Filename )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_Employee_FullName ON dbo.Employee
( LastName,FirstName,MiddleName )
WITH( FILLFACTOR = 50)

GO
CREATE INDEX IX_Employee_HostCompanyID ON dbo.Employee
( HostCompanyID,EmployeeID )
WITH( FILLFACTOR = 90)

GO
CREATE INDEX IX_GroupingApplicationActivity_GroupingIDAActivityID ON dbo.GroupingApplicationActivity
( GroupingID,ApplicationActivityID )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_LookUpField_LookUpTableID ON dbo.LookUpField
( LookUpTableID,DisplayOrder,LookupFieldID )
WITH( FILLFACTOR = 90)

GO
CREATE INDEX IX_LookUpLink_LookUpTableID ON dbo.LookUpLink
( LookUpTableID,DisplayOrder,LookupLinkID )
WITH( FILLFACTOR = 90)

GO
CREATE INDEX IX_LookUpSelection_DisplayOrder ON dbo.LookUpSelection
( DisplayOrder,LookUpSelectionCode )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_LookUpTableSelCodeDispOrd ON dbo.LookUpTable
( SelectionCode,DisplayOrder )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_OrderMode_DisplayOrder ON dbo.OrderMode
( DisplayOrder )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_SysConstant_DisplayOrder ON dbo.SysConstantValueList
( DisplayOrder,EnumName,ConstantValueListID )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_SysConstantValue_ListID_DispOrder ON dbo.SysConstantValue
( ConstantValueListID,DisplayOrder,ConstantValueID )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_SysConstantValue_ListID_ENUM ON dbo.SysConstantValue
( ConstantValueListID,EnumEntry )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_SysValueItem_ListDispOrd ON dbo.SysValueItem
( ValueItemListID,DisplayOrder,ValueItemID )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_SysValueItemList_DIspOrd ON dbo.SysValueItemList
( DisplayOrder,Description,ValueItemListID )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_Tally_Tally ON dbo.Tally
( Tally )
WITH( FILLFACTOR = 90)

GO
CREATE UNIQUE INDEX IX_TEntry_ParentID ON dbo.TEntry
( ParentID )
WITH( FILLFACTOR = 90)

GO
CREATE INDEX IX_User_UserIDGroupingID ON dbo.UserGrouping
( UserID,GroupingID )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_ValueItem_ListID_DispOrd ON dbo.ValueItem
( ValueItemListID,DisplayOrder,Value )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_ValueItemList_DisplayOrder ON dbo.ValueItemList
( DisplayOrder,Description,ValueItemListID )
WITH( FILLFACTOR = 70)

GO
CREATE INDEX IX_VATRate_VATRateCode ON dbo.VATRate
( VATRateCode,DateStart )
WITH( FILLFACTOR = 90)

GO
CREATE UNIQUE INDEX PK_UserList_UserName ON dbo.UserList
( UserName )
WITH( FILLFACTOR = 70)

GO

/******************************************************
  Indexes  End
******************************************************/
GO

----------------------------------------------------
-- dbo.vwSalesOrderTimeSheetEntrySum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwSalesOrderTimeSheetEntrySum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwSalesOrderTimeSheetEntrySum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


Create View vwSalesOrderTimeSheetEntrySum as 
select 
SalesOrderID,
Sum((DateDiff(minute,StartTime,EndTime)/60)/8.0) as TimeSheetEntryDays
from TimeSheetEntry TSE
Inner Join WorkOrder WO on WO.WorkOrderID = TSE.WorkOrderID
Where StartTime Is Not Null And EndTime Is Not Null
Group By SalesOrderID


GO



----------------------------------------------------
-- dbo.vwSalesOrderPickedWOsSum
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwSalesOrderPickedWOsSum') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwSalesOrderPickedWOsSum
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


Create View vwSalesOrderPickedWOsSum as
Select 
WO.SalesOrderID,
Sum(Case When IsNull(QtyMatReqsOther,0) - IsNull(QtyMatReqsOtherUnpicked,0) > 0 Then 1 Else 0 End) as WOsMROtherPicked
from vwWorkOrderMatReqOtherSum WOMROS
Inner Join WorkOrder WO on WO.WorkOrderID = WOMROS.WorkOrderID
Group By WO.SalesOrderID


GO

----------------------------------------------------
-- dbo.vwSalesOrderProgressInfo
----------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'dbo.vwSalesOrderProgressInfo') and OBJECTPROPERTY(id, N'IsView') = 1) drop view dbo.vwSalesOrderProgressInfo
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


CREATE View [dbo].[vwSalesOrderProgressInfo] as
select 
SO.SalesOrderID,
SO.ProjectName,
SO.FinishDate,
WOS.QtyWOs,
ECS.EngineeringCompleteQty,
DCS.DespatchCompleteQty,
PWOS.WOsMROtherPicked,
TimeSheetEntryDays,
CU.CompanyName,
vwCPOS.SumCustomerOrderNetValue,
vwInvSum.SumInvoiceItem


from salesorder SO
Left Join vwSalesOrderWorkOrderSum WOS on WOS.SalesOrderID = SO.SalesOrderID
Left Join vwSalesOrderEngineeringCompleteSum ECS on ECS.SalesOrderID = SO.SalesOrderID
Left Join vwSalesOrderDespatchCompleteSum DCS on DCS.SalesOrderID = SO.SalesOrderID
Left Join vwSalesOrderPickedWOsSum PWOS on PWOS.SalesOrderID = SO.SalesOrderID
Left Join vwSalesOrderTimeSheetEntrySum TSES on TSES.SalesOrderID = SO.SalesOrderID
LEFT JOIN Customer as CU on SO.CustomerID=CU.CustomerID
left join vwCustomerPurchaseOrdersSum as vwCPOS on vwCPOS.SalesOrderID=SO.SalesOrderID
LEFT JOIN vwInvoiceSum vwInvSum on vwInvSum.SalesOrderID = SO.SalesOrderID


GO


